{"version":3,"sources":["biq-widget-structure.js","biq-theme-dialog.js","biq-theme-manager.js","biq-widget-element-parser.js","biq-tab.js","app.js"],"names":["BIQWidgetStructure","BIQThemeDialog","$mdDialog","$mdMedia","bsLoadingOverlayService","Notification","$rootScope","$timeout","self","this","biq_theme_manager","customFullScreen","elementWrapperDefault","target","document","getElementById","main_wrapper_id","template","params","show","ev","controller","parent","angular","element","body","targetEvent","clickOutsideToClose","escapeToClose","fullscreen","then","submit","hide","$scope","input_value","values","widget_not_ready","p_success","formData","FormData","$b","key","value","bisnull","append","files","length","i","model_value","data","$modelValue","attr","lfFile","functions","maskShow","ajax","url","ajaxurl","type","async","cache","contentType","processData","success","response","response_json","JSON","parse","is_found","find","widget_id","replaceWith","html","BIQThemeManager","widgetHoverApply","maskHide","error_message","dialog","$watch","wantRestore","wantsFullScreen","customFullscreen","referenceId","start","stop","BIQWidgetElementParser","structure","structure_item","BIQWidgetStructureDefaults","attribute_css","label","placeholder","prototype","contact_email_simple","title","attribute_main","required","input_attrs","default","template_uri","contact_phone_simple","logo","menu_main","heading_section_left","category_list","init","ready","loading","hoverToEdit","window","onbeforeunload","hover_to_edit","widget_sel","hide_delay","is_editing","hide_timeout_obj","p_delay","auto_hide","self2","onmouseleave","setTimeout","set_overlay_sizes","p_callback","el_sel_position","offset","css","left","top","width","outerWidth","height","outerHeight","hover_to_edit_html","on","e","editWidget","clearTimeout","p_widget_id","selector","widget_input","generateWidgetInputAll","main","getValues","widget_not_ready_el","children","message","ret","layout","widget_structure_name","html_form_main","generateInputForm","text","radio","file","html_form_css","p_structure_item","is_required","hasOwnProperty","ngRequired","ret_html","p_selector","p_timeout","loading_html","getLayoutClass","layout_class_arr","layout_el","closest","hasClass","p_widget_type","p_widget_sel","p_structure_sel","widget_function","typeToFunction","contactEmailSimple","p_el","defaultFormValues","image_src","getDefaultValue","menuMain","headingSectionLeft","prop","toLowerCase","categoryList","p_key","default_values","widget_type","css_inline","classes","getClassNames","css_default_arr","trim","split","push","css_all_arr","diff","join","p_str","type_arr","type_component","ucfirst","biqTab","restrict","transclude","scope","tabType","headerHeight","containerWidth","ngclass","$attrs","panes","headerHeightClass","containerStyle","select","pane","forEach","selected","click","location","addPane","active","biqTabItem","require","link","attrs","biqTabCtrl","bngapp","module","scopeCtrl","factory","ref","directive","config","NotificationProvider","setOptions","delay","startTop","startRight","verticalSpacing","horizontalSpacing","positionX","positionY"],"mappings":"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","file":"app.min.js","sourcesContent":["function BIQWidgetStructure(){\n\n}\n/*\n * 'key' is the main key of $atts at wordpress shortcode function. If 'key' = 'content, it is eman $content\n */\nBIQWidgetStructureDefaults = {\n    'attribute_css' :[\n\t{ 'key' : 'css_inline', 'type' : 'text', 'label' : 'Inline CSS'},\n\t{ 'key' : 'classes', 'type' : 'text', 'label' : 'CSS Classes', 'placeholder' : 'Sparate by space for multiple class name' }\n    ]\n};\nBIQWidgetStructure.prototype.contact_email_simple = {\n    'title' : 'Setting - Contact Email Simple',\n    'attribute_main' : [\n\t{ 'key' : 'content', 'type' : 'text', 'label' : 'Email Address', 'required':true, 'input_attrs':'type=\"email\"' },\n\t{ 'key' : 'icon_type', 'type' : 'radio', 'label' : 'Icon type', \n\t    'value' : [\n\t\t{ 'label': 'Image', 'value': 'image'},\n\t\t{ 'label': 'Class', 'value': 'class'}\n\t    ] \n\t},\n\t{ 'key' : 'icon_value', 'type' : 'text', 'label' : 'URL Image / class',\n            'default': template_uri+'/images/biq/widgets/contact-email-simple/icon-contact-email-21x14.png'\n\t    , 'placeholder' :'Leave empty for default value' }\n    ],\n    'attribute_css' :[\n\t{ 'key' : 'css_inline', 'type' : 'text', 'label' : 'Inline CSS'},\n\t{ 'key' : 'classes', 'type' : 'text', 'label' : 'CSS Classes', 'placeholder' : 'Sparate by space for multiple class name' }\n    ]\n};\nBIQWidgetStructure.prototype.contact_phone_simple = {\n    'attribute_main' : [\n\t\n    ]\n};\n\nBIQWidgetStructure.prototype.logo = {\n    'title' : 'Setting - Logo',\n    'attribute_main':[\n        { 'key': 'img_file_name', 'type':'file', 'label':'Browse' },\n        { 'key' : 'img_title', 'type':'text', 'label':'Image Title' },\n        { 'key' : 'img_alt', 'type':'text', 'label':'Alternative text' }\n    ],\n    'attribute_css' :[\n\t{ 'key' : 'css_inline', 'type' : 'text', 'label' : 'Inline CSS'},\n\t{ 'key' : 'classes', 'type' : 'text', 'label' : 'CSS Classes', 'placeholder' : 'Sparate by space for multiple class name' }\n    ]\n};\n\nBIQWidgetStructure.prototype.menu_main = {\n    'title' : 'Setting Main Menu',\n    'attribute_main':[\n        { 'key': 'float', 'type' : 'radio', 'label' : 'Float', \n\t    'value' : [\n\t\t{ 'label': 'Right', 'value': 'right'},\n\t\t{ 'label': 'Left', 'value': 'left'}\n\t    ]\n        }\n    ],\n    'attribute_css' :[\n\t{ 'key' : 'css_inline', 'type' : 'text', 'label' : 'Inline CSS'},\n\t{ 'key' : 'classes', 'type' : 'text', 'label' : 'CSS Classes', 'placeholder' : 'Sparate by space for multiple class name' }\n    ]\n};\nBIQWidgetStructure.prototype.heading_section_left = {\n    'title' : 'Setting - Heading section left',\n    'attribute_main' :[\n        {'key':'content', 'type':'text', 'label': 'Header Text', 'required':true},\n        {'key':'tag_name', 'type':'radio', 'label':'Tag name',\n            'value': [\n                { 'label': 'H4','value':'h4' },\n                { 'label': 'H3','value':'h3' },\n                { 'label': 'H2','value':'h2' },\n                { 'label': 'H1','value':'h1' }\n            ]\n        },\n        {'key':'highlight', 'type':'radio', 'label':'Highlight',\n            'value': [\n                { 'label':'<font style=\"color:#113481\">Default</font>', 'value':'highlight-default' },\n                { 'label':'<font style=\"color:#df1f26\">Red</font>', 'value':'highlight-red' },\n                { 'label':'None', 'value':'none' }\n            ]\n        }\n    ],\n    'attribute_css' : BIQWidgetStructureDefaults.attribute_css\n};\nBIQWidgetStructure.prototype.category_list = {\n    'title' : 'Setting - Category list',\n    'attribute_main' :[\n        { 'key':'taxonomy', 'type':'text', 'label':'Taxonomy', 'default':'product_cat' },\n        { 'key':'orderby', 'type':'radio', 'label':'Order By',\n            'value':[\n                { 'label': 'name', 'value':'name' }, { 'label':'description', 'value':'description' }, {'label':'slug', 'value':'slug'}\n            ]\n        },\n        { 'key':'order', 'type':'radio', 'label':'Order',\n            'value':[\n                {'label':'ASC', 'value':'ASC'}, {'label':'DESC', 'value':'DESC'}\n            ]\n        },\n        { 'key':'hide_empty', 'type':'radio', 'label':'hide_empty',\n            'value':[\n                {'label':'true', 'value':'1'}, {'label':'false', 'value':'0'}\n            ]\n        },\n        { 'key':'hierarchical', 'type':'radio', 'label':'hierarchical',\n            'value':[\n                {'label':'true', 'value':'1'}, {'label':'false', 'value':'0'}\n            ]\n        }\n    ],\n    'attribute_css' : BIQWidgetStructureDefaults.attribute_css\n};\n","/*\n *Created by: Bayu candra <bayucandra@gmail.com>\n *Creation Year: 2016\n*/\nfunction BIQThemeDialog( $mdDialog, $mdMedia, bsLoadingOverlayService, Notification, $rootScope, $timeout ){\n    var self=this;\n    self.biq_theme_manager = null;\n    self.customFullScreen=$mdMedia('xs') || $mdMedia('sm');\n    self.elementWrapperDefault= { target : document.getElementById(main_wrapper_id) };\n    self.template = null;//SET BY BIQThemeManager\n    self.params = {};\n    self.show = function(ev, params){\n        self.params = params;//Pass this to the $scope of controller\n//        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs'))  && self.customFullscreen;\n        $mdDialog.show({\n            controller: self.controller,\n            template: self.template,\n    //      disableParentScroll: false,\n            parent: angular.element(document.body),\n            targetEvent: self.elementWrapperDefault,\n            clickOutsideToClose:true, escapeToClose:true,// disable later escapeToClose on masking\n            fullscreen: self.customFullScreen\n        })\n        .then(function(submit) {\n        }, function() {//Must be same function as 'hide' in the controller\n            self.hide();\n        });\n    };\n\n    self.controller = function($scope, $mdDialog) {\n        $scope.input_value = self.params.values;\n        $scope.widget_not_ready = self.params.widget_not_ready;\n        \n        $scope.hide = function(p_success) {// for hiding outside scope, pass 'true' to avoid 'Notification()'\n            p_success = typeof p_success !== 'undefined' ? p_success : false;\n            self.hide(p_success);\n            $mdDialog.hide();\n        };\n        $scope.submit = function(submit) {\n            var formData = new FormData($b('#widget-dialog form')[0]);\n\n            for(var key in $scope.input_value){\n                var value = !bisnull($scope.input_value[key]) ? $scope.input_value[key] : '';\n                formData.append(key, value);\n//                console.log(key+' '+$scope.input_value[key]);\n            }\n            //BEGIN IF has files to upload===============\n            var files = $b('.lf-ng-md-file-input');\n\n            if(files.length){\n                for(var i=0; i<files.length; i++){\n                    var model_value = angular.element($b(files[i])).data('$ngModelController').$modelValue[0];\n                    if(!bisnull(model_value)){\n                        formData.append(\n                            $b(files[i]).attr('lf-files'),\n                            model_value.lfFile\n                        );\n                    }\n                }\n            }\n            //END IF has files to upload****************\n            \n            formData.append('action', 'widget_save');//The Wordpress ajax name\n            self.functions.maskShow('widget-dialog');\n            $b.ajax({\n                'url': ajaxurl,\n                'type' : 'POST', 'data':formData,\n                'async': false, 'cache': false,\n                'contentType': false, 'processData': false,\n                'success':function(response){//ajaxurl is default by Wordpress\n                    var response_json = JSON.parse(response);\n                    if( response_json.is_found ){\n                        $scope.hide(true);\n                        $b('body').find('[data-biq-widget-id=\"'+response_json.widget_id+'\"]').replaceWith(response_json.html);//continue here 160801\n                        $timeout(function(){\n                            $rootScope.BIQThemeManager.widgetHoverApply(response_json.widget_id);\n                        });\n                        Notification(\"Widget succesfully updated\",\"success\");\n                    }else{\n                        self.functions.maskHide('widget-dialog');\n                        var error_message = !bisnull(response_json.html) ? response_json.html : 'Empty response, seem widget functions not defined properly.';\n                        Notification(\"Widget update failed: \"+error_message, \"error\");\n                    }\n                }\n            });\n        };\n\n        $scope.dialog = {};\n        $scope.$watch(function(){//WATCH SCREEN SIZE FOR SET FLEX OF DIALOG WIDTH\n            return $mdMedia('gt-sm');\n        }, function(wantRestore){\n            $scope.dialog['flex'] = wantRestore ?  40 : 100;\n            $scope.dialog['height'] = wantRestore ? 'auto' : '100%';\n        });\n\n    \t$scope.$watch(function() {\n            return $mdMedia('xs') || $mdMedia('sm');\n    \t}, function(wantsFullScreen) {\n            self.customFullscreen = (wantsFullScreen === true);\n    \t});\n    };\n    \n    self.hide = function(p_success){\n        p_success = typeof p_success !== 'undefined' ? p_success : false;\n        self.functions.maskHide('widget-dialog');\n        if(!p_success) Notification('Widget edit canceled', 'warning');\n//        self.biq_theme_manager.hover_to_edit.is_editing = false;\n//        self.biq_theme_manager.hover_to_edit.onmouseleave();\n    };\n    \n    self.functions = {\n        maskShow : function(referenceId){\n            bsLoadingOverlayService.start({\n              referenceId: referenceId\n            });\n        },\n        maskHide : function(referenceId){\n            bsLoadingOverlayService.stop({\n              referenceId: referenceId\n            });\n        }\n    };\n}\n","/**\n * @file biq-theme-manager.js\n * @brief Main theme manager for widget interface\n * \n * This is the main Class which controll the widget interaction trough angular main module. Will instantiated as angular service. Depend on:\n * - BIQThemeDialog => linked to variable member self.dialog\n * - BIQWidgetElementParser => linked to variable member self.BIQWidgetElementParser\n * <br>Both of them linked as a member / properties, since will result as circular reference if directly put as argument at angular 'factory' declaration.\n * \n * @author Bayu candra <bayucandra@gmail.com>\n*/\n\nfunction BIQThemeManager( Notification, BIQThemeDialog, BIQWidgetElementParser ){\n    var self = this;\n    self.Notification = Notification;\n    self.BIQWidgetElementParser = BIQWidgetElementParser;\n    self.structure = new BIQWidgetStructure;\n    self.structure_item = null; // will set at generateWidgetImputAll()\n    self.dialog = BIQThemeDialog; /// <i>self.dialog</i> variable will be referenced to md-dialog to show. Set this class by pointer to those md-dialog.\n}\n\n/**\n * @brief initializing the main Object/Class\n * \n * Run main hover mask functions and set body events\n */\nBIQThemeManager.prototype.init = function(){\n    var self = this;\n    $b(document).ready(function(){\n        self.loading('body', 1500);\n        self.hoverToEdit();\n        window.onbeforeunload=function(){\n            self.loading('body');\n        };\n    });\n};\n\n/**\n * @brief generate overlay mask over widget\n * \n * Will be initialy called by init() function to generate overlay element above widget which will need to edit. \n */\nBIQThemeManager.prototype.hoverToEdit= function(){\n    var self = this;\n    self.hover_to_edit = {\n\twidget_sel : null,//Will be assigned with jQuery(this) on widget hover event => hoverToEdit()\n\thide_delay : 500,\n\tis_editing : false,//If true, prevent auto hide\n\thide_timeout_obj : null,// To handle setTimeout on mouseleave and must cancel by clearTimeout when enter again before delay reached\n\thide: function(p_delay){\n\t    p_delay = typeof p_delay !== 'undefined' ? p_delay : 100;\n\t    $b('.hover-to-edit .highlight').hide(p_delay, function(){\n\t\t$b('.hover-to-edit').hide(0);\n\t    });\n\t},\n\tauto_hide: function(){\n\t    var self2 = this;\n//\t    if(!self2.is_editing){\n\t\tself2.hide();\n//\t    }\n\t},\n\tonmouseleave: function(){\n\t    var self2 = this;\n\t    self2.hide_timeout_obj = setTimeout( function(){ self2.auto_hide();}, self2.hide_delay );\n\t},\n\tset_overlay_sizes : function(p_callback){\n//\t    var self2 = this;\n\t    var el_sel_position = self.hover_to_edit.widget_sel.offset();\n\n\t    $b('.hover-to-edit').css({left : el_sel_position.left+'px', top : el_sel_position.top+'px'});\n\t    $b('.hover-to-edit .highlight').css({\n\t\twidth: self.hover_to_edit.widget_sel.outerWidth(),\n\t\theight: self.hover_to_edit.widget_sel.outerHeight()\n            });\n            if(typeof p_callback === 'function'){\n                p_callback();\n            }\n\t}\n    };\n    \n   var hover_to_edit_html =\n\t   '<div class=\"hover-to-edit\"> \\n\\\n\t\t<div class=\"highlight\" title=\"Double click here to edit\"></div>\\n\\\n\t\t<div class=\"footer\"><div class=\"button edit\">Edit</div></div>\\n\\\n\t    </div>';\n    $b('body').append(hover_to_edit_html);\n    $b('.hover-to-edit .highlight').on('dblclick', function(e){\n\tself.editWidget(e);\n    });\n    $b('.hover-to-edit .footer .button').on('click', function(e){\n\tself.editWidget(e);\n    });\n    $b('.hover-to-edit').on('hover', function(e){\n\tif(e.type === 'mouseenter'){\n\t    self.hover_to_edit.is_editing = false;//temporary unused variable handler\n\t    clearTimeout(self.hover_to_edit.hide_timeout_obj);\n\t}else if(e.type === 'mouseleave'){\n\t    self.hover_to_edit.onmouseleave();\n\t}\n    });\n    self.widgetHoverApply();\n};\n/**\n * @brief apply hover mask to widget based whether \"individually\" per element or \"all in once\" to all elements\n * \n * The \"individual\" procedure necessary to apply the hover overlay mask only to individual widget after creation.\n * Usually called by biq-theme-dialog.js when submit widget is finished and success\n * <br><br>The \"all in once\" procedure will executed on the first time whole page loaded\n * @param {String} p_widget_id the ID of widget which usually got from AJAX response generated by PHP/Wordpress server,\n *  if omitted / undefined then it is mean for \"all in once procedure\"\n */\nBIQThemeManager.prototype.widgetHoverApply = function(p_widget_id){\n    var self = this;\n    var selector = typeof p_widget_id!=='undefined' ?\n            '.biq-widgets[data-biq-widget-id=\"'+p_widget_id+'\"]'//Only match to specific data-biq-widget-id\n            :'.biq-widgets'; //All widget\n    $b(selector).on('hover', function(e){\n\tif(e.type === 'mouseenter'){\n            clearTimeout( self.hover_to_edit.hide_timeout_obj );\n            $b('.hover-to-edit .highlight').stop(false, true);//stop previous animation: $b('.hover-to-edit .highlight').show(200);\n            self.hover_to_edit.widget_sel = null;\n            self.hover_to_edit.widget_sel = $b(this);\n            self.hover_to_edit.set_overlay_sizes(\n                function(){\n                    $b('.hover-to-edit').show(0, function(){\n                        $b('.hover-to-edit .highlight').show(200);\n                    });\n                }\n            );\n\t}\n    });\n};\n/**\n * @brief executed on \"edit\" button click or mask overlay doubleclick\n * \n * 1.generate template for md-dialog interface and input content <br>\n * 2.show the md-dialog <br>\n * 3.hide the overlay mask interface <br>\n * \n * @param {Object} e DOM emitted on the event click button and doubleclick overlay mask\n */\nBIQThemeManager.prototype.editWidget = function(e){\n    var self = this;\n    \n    self.hover_to_edit.is_editing = true;\n    var widget_input = self.generateWidgetInputAll();\n    self.dialog.biq_theme_manager = self;\n\n    self.dialog.template = \n\t'\\\n\t    <md-dialog id=\"widget-dialog\" aria-label=\"'+widget_input.title+'\" class=\"bs-loading-container\" \\\n\t\t     bs-loading-overlay=\"widget-dialog\" bs-loading-overlay-template-url=\"'+template_uri+'/backend/app/template/dialog/dialog-default.html\" \\\n\t\t     bs-loading-overlay-delay=\"2000\" flex=\"{{dialog.flex}}\" style=\"height:{{dialog.height}}\" \\\n\t\tng-cloak> \\\n\t    <form name=\"widgetForm\" class=\"biq-dialog\"> \\\n\t\t<md-toolbar class=\"bdialog-toolbar\"> \\\n\t\t  <div class=\"md-toolbar-tools\"> \\\n\t\t    <h2>'+widget_input.title+'</h2> \\\n\t\t    <span flex></span> \\\n\t\t    <md-button class=\"md-icon-button\" ng-click=\"hide()\"> \\\n\t\t      <md-icon md-svg-src=\"'+template_uri+'/images/icon/dialog_close.svg\" aria-label=\"Close dialog\"></md-icon> \\\n\t\t    </md-button> \\\n\t\t  </div> \\\n\t\t</md-toolbar> \\\n\t\t<md-dialog-content layout=\"column\" layout-padding ng-if=\"widget_not_ready==null\"> \\\n                    <input type=\"hidden\" name=\"widget_type\" ng-model=\"input_value.widget_type\">\\\n                    <input type=\"hidden\" name=\"widget_id\" ng-model=\"input_value.widget_id\">\\\n\t\t\t<biq-tab tab-type=\"tab\" header-height=\"40\" style=\"margin:5px;\" container-width=\"100%\">\\\n\t\t    '+\n\t\t\twidget_input.main + widget_input.css\n\t\t    +'  </biq-tab>\\\n\t\t</md-dialog-content> \\\n\t\t<md-dialog-actions layout=\"row\" ng-if=\"widget_not_ready==null\"> \\\n\t\t    <span flex></span> \\\n\t\t    <md-button type=\"submit\" ng-click=\"submit(true)\" class=\"md-primary\" md-autofocus>Submit</md-button> \\\n\t\t    <md-button ng-click=\"hide()\" style=\"margin-left:10px;\">Cancel</md-button> \\\n\t\t</md-dialog-actions> \\\n                    \\\n                <md-dialog-content ng-if=\"widget_not_ready!=null\" layout-padding>\\\n                    <h4 style=\"color:red;\">Widget not ready for setting:</h4> \\\n                    <h3>{{widget_not_ready.message}}</h3>\\\n                </md-dialog-content>\\\n\t    </form> \\\n\t</md-dialog>';\n    var values = self.BIQWidgetElementParser.getValues(\n            self.hover_to_edit.widget_sel.data('biqWidgetType'), // the type of widget eg : contact_email_simple\n            self.hover_to_edit.widget_sel, self.structure_item\n        );\n    var widget_not_ready = null;\n    var widget_not_ready_el = self.hover_to_edit.widget_sel.children('.widget-not-ready');\n    if( widget_not_ready_el.length ){\n        widget_not_ready = {message: widget_not_ready_el.html()};\n    }\n//    values[\"layout\"] = self.getLayoutClass();//currently unused, used widget_id instead via BIQWidgetElementParser on each\n    self.dialog.show(e, {values: values, widget_not_ready:widget_not_ready});\n    \n    self.hover_to_edit.onmouseleave();\n};\n/**\n * @brief Generate input markup element for md-dialog interface\n * \n * Produce {Object} data type, has 2 main properties. One is 'main' for the main widget input, the other is 'css' for inline and classes option.\n * @returns {Object} ret return object for input at md-dialog : <br>\n * - main : for main widget setting input\n * - css : for css input, usually 'inline' and 'classes'\n * - title: for using as md-dialog title\n * - layout: currently unused\n */\nBIQThemeManager.prototype.generateWidgetInputAll = function(){\n    var self = this;\n    var ret = {main : '-', css : '-', title: '-', layout: ''};//layout is for the main layout root ( \"header\", \"body\" or \"footer\" )\n    //BEGIN CONVERT CLASS NAME TO STRUCTURE NAME Eg. contact-email-simple to contact_email_simpleXXXXXXXX change to using data-\n//    var widget_classes = self.hover_to_edit.widget_sel.attr('class');\n//    var widget_classes_split = widget_classes.split(' ');\n    var widget_structure_name = self.hover_to_edit.widget_sel.data('biqWidgetType');//widget_classes_split[1].replace(/-/g, '_');\n    //END CONVERT CLASS NAME TO STRUCTURE ===============\n    self.structure_item = self.structure[widget_structure_name];\n    \n    var html_form_main = '';\n    for(var i=0; i<self.structure_item.attribute_main.length; i++){\n\tvar attribute_main = self.structure_item.attribute_main[i];\n\tswitch( attribute_main.type ){\n\t    case \"text\":\n\t\thtml_form_main = html_form_main + self.generateInputForm.text( attribute_main );\n\t\tbreak;\n\t    case \"radio\":\n\t\thtml_form_main = html_form_main + self.generateInputForm.radio( attribute_main );\n\t\tbreak;\n            case \"file\":\n                html_form_main = html_form_main + self.generateInputForm.file( attribute_main );\n                break;\n\t}\n    }\n    ret.main = '<biq-tab-item title=\"Main\">'+html_form_main+'</biq-tab-item>';\n    \n    var html_form_css = '';\n    for(var i=0; i<self.structure_item.attribute_css.length; i++){\n\tvar attribute_css = self.structure_item.attribute_css[i];\n\tswitch( attribute_css.type ){\n\t    case \"text\":\n\t\thtml_form_css = html_form_css + self.generateInputForm.text( attribute_css );\n\t\tbreak;\n\t    case \"radio\":\n\t\thtml_form_css = html_form_css + self.generateInputForm.radio( attribute_css );\n\t\tbreak;\n\t}\n    }\n    ret.css = '<biq-tab-item title=\"CSS\">'+html_form_css+'</biq-tab-item>';\n    \n    ret.title = self.structure_item.title;\n//    ret.layout = self.getLayoutClass(); //currently unused\n//    self.getStructureIdx();\n    return ret;\n};\n/**\n * @brief Generate input form per element to call in generateWidgetInputAll()\n * \n * The element produced in angular material style. Will call inside loop check each element of 'main' and 'css' tab.\n */\nBIQThemeManager.prototype.generateInputForm = {\n    text : function( p_structure_item ){\n\tvar is_required = ( p_structure_item.hasOwnProperty('required') && (p_structure_item.required) );\n\tvar ngRequired = is_required ? ' ng-required=\"true\"' : '';\n\tvar input_attrs = p_structure_item.hasOwnProperty('input_attrs') ? p_structure_item.input_attrs : '';\n\tvar placeholder = bisnull(p_structure_item.placeholder) ? '' : '( '+p_structure_item.placeholder+' )';\n\tvar ret_html = \n\t\t'<md-input-container class=\"md-block\" flex> \\\n\t\t    <label>'+p_structure_item.label+': '+placeholder+'</label> \\\n\t\t    <input name=\"'+p_structure_item.key+'\"'+ngRequired+' ng-model=\"input_value.'+p_structure_item.key+'\" '+input_attrs+'> \\\n\t\t    <div ng-if=\"'+is_required+'\" ng-messages=\"widgetForm.'+p_structure_item.key+'.$error\"> \\\n\t\t\t<div ng-message=\"required\" style=\"text-align:right;\">'+p_structure_item.label+' is required.</div> \\\n\t\t    </div> \\\n\t\t</md-input-container>';\n\t\n\treturn ret_html;\n    },\n    file : function( p_structure_item ){\n        var ret_html =\n                '<lf-ng-md-file-input lf-files=\"'+p_structure_item.key+'\" lf-browse-label=\"'+p_structure_item.label+'\" \\\n                         accept=\"image/*\" ng-disabled=\"ctrl.disabled01\"> \\\n                    </lf-ng-md-file-input>';\n        return ret_html;\n    },\n    radio : function(p_structure_item){\n\tvar ret_html=\n\t\t'<md-input-container class=\"md-block\" flex>\\\n\t\t    <md-radio-group ng-model=\"input_value.'+p_structure_item.key+'\" layout=\"row\">\\n\\\n\t\t    <span class=\"label1 w10\">'+p_structure_item.label+'</span>';\n\tfor(var i=0; i< p_structure_item.value.length; i++){\n\t    var label = p_structure_item.value[i].label; var value = p_structure_item.value[i].value;\n\t    ret_html = ret_html + '<md-radio-button value=\"'+value+'\" class=\"md-primary\">'+label+'</md-radio-button>';\n\t}\n\tvar ret_html = ret_html + \n\t\t    '</md-radio-group>\\n\\\n\t\t</md-input-container>';\n\treturn ret_html;\n    }\n};\n/**\n * @brief display loading inside an element.\n * @param {String} p_selector jQuery format selector where the loading will be displayed\n * @param {Integer} p_timeout Delay timeout for the loading to be displayed ( in millisecond )\n */\nBIQThemeManager.prototype.loading = function(p_selector, p_timeout){// #id or .class\n    var loading_html = '<div id=\"biq-loading\">\\n\\\n\t<div class=\"image\">\\n\\\n\t    <img src=\"'+template_uri+'/images/biq/biq-logo.png\"\\n\\\n\t    <br /><h3>Loading...</h3>\\n\\\n\t</div>\\n\\\n    </div>';\n    $b(p_selector).append(loading_html);\n    if(typeof p_timeout !== 'undefined'){\n\tsetTimeout(function(){\n\t    $b('#biq-loading').hide(200);\n\t},p_timeout);\n    }\n};\n/**\n * Currently unused, basicly it will get to which layout belong: \"header\", \"body\" or \"footer\"\n */\nBIQThemeManager.prototype.getLayoutClass = function(){\n    var self = this;\n    var ret = '';//return class name of main layout wrapper\n    \n    var layout_class_arr = [\"header\", \"body\", \"footer\"];\n    \n    var layout_el = self.hover_to_edit.widget_sel.closest('.layout');\n    for(var i=0; i<layout_class_arr.length; i++){\n\tif( layout_el.hasClass( layout_class_arr[i] ) ) ret = layout_class_arr[i];\n    }\n    return ret;\n};\n","/** @file biq-widget-element-parser.js\n * @brief Parsing HTML DOM element to get the structure data of widget\n *\n *@author Bayu candra <bayucandra@gmail.com>\n *Creation Year: 2016\n*/\nfunction BIQWidgetElementParser(){\n    \n}\n/**\n * Main function to Get values based on widget name by call other functions \n * \n * @param {String} p_widget_type is based on widget type wich is belong to html attribute named data-biq-widget-type which need to convert to function name which is using camel case convention ( by using typeToFunction() function)\n * @param {Object} p_widget_sel HTML element got from jQuery function $('#id'). It is selected widget by click 'Edit' after hovering\n * @param {Object} p_structure_sel Selected structure by matching p_widget_sel and defined at biq-widget-structure.js.\n * @returns {Object} generated by function called with self[p_widget_type] which give reference to a function\n */\nBIQWidgetElementParser.prototype.getValues = function(p_widget_type, p_widget_sel, p_structure_sel){\n    var values = {};\n    var self = this;\n    var widget_function = self.typeToFunction(p_widget_type);\n    values= self[widget_function](p_widget_sel, p_structure_sel);\n    return values;\n};\n/* \n * 1. Expect JQuery element as parameter i.e: $(element)\n * 2. return var values = { main:{ key: value}, css: {} };\n */\nBIQWidgetElementParser.prototype.contactEmailSimple = function( p_el, p_structure_item ){\n//    '<a href=\"mailto:'.$content.'\" class=\"biq-widgets contact-email-simple\"'. $css_inline .'>'\n//\t\t\t.'<div class=\"icon\"><img src=\"'.$icon_value.'\"></div>' \n//\t\t\t.'<div class=\"text\">'. $content .'</div>' \n//\t\t    .'</a>'\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n    \n    values[\"content\"] = p_el.children('.text').html();\n     \n    if( p_el.children('.icon').children('img').length ){\n\tvalues['icon_type'] = 'image';\n\tvar image_src = p_el.children('.icon').children('img').attr('src');\n\tvalues[\"icon_value\"] = image_src === self.getDefaultValue( p_structure_item, 'icon_value' )? '' : image_src ;\n    }else{\n\tvalues['icon_type'] = 'css';\n\tvalues[\"icon_value\"] = p_el.children('.icon').children('span').attr('class');\n    }\n    \n    return values;\n};\nBIQWidgetElementParser.prototype.logo = function(p_el, p_structure_item){\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n    \n    values['img_title'] = p_el.children('img').attr('title');\n    values['img_alt'] = p_el.children('img').attr('alt');\n    \n    return values;\n};\nBIQWidgetElementParser.prototype.menuMain = function(p_el, p_structure_item){\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n\n    values['float'] = p_el.hasClass('right') ? 'right' : 'left';\n    \n    return values;\n};\nBIQWidgetElementParser.prototype.headingSectionLeft = function(p_el, p_structure_item){\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n    values[\"content\"] = p_el.html();\n    values[\"tag_name\"] = p_el.prop(\"tagName\").toLowerCase();\n    if(p_el.hasClass('highlight-default')){\n        values['highlight'] = 'highlight-default';\n    }else if( p_el.hasClass('highlight-red') ){\n        values['highlight'] = 'highlight-red';\n    }else{\n        values['highlight'] = 'none';\n    }\n    return values;\n};\nBIQWidgetElementParser.prototype.categoryList = function(p_el, p_structure_item){\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n    values['taxonomy'] = p_el.data('taxonomy');\n    values['orderby'] = p_el.data('orderby');\n    values['order'] = p_el.data('order');\n    values['hide_empty'] = p_el.data('hideEmpty');\n    values['hierarchical'] = p_el.data('hierarchical');\n    return values;\n};\n/**\n * Important to get default value of 'key'. Usually necessary when default input can be empty to load based on default value.\n * \n * @param [Object] p_structure_item structure of widget as defined on file biq-widget-structure.js\n * @param {String} p_key key of input / value type\n * @returns {String} the default value\n */\nBIQWidgetElementParser.prototype.getDefaultValue = function(p_structure_item, p_key){\n    var ret = '';\n    for( var i=0; i<p_structure_item.attribute_main.length; i++){\n\tif(p_structure_item.attribute_main[i].key === p_key){\n\t    ret = p_structure_item.attribute_main[i].default;\n\t}\n    }\n    for( var i=0; i<p_structure_item.attribute_css.length; i++){\n\tif(p_structure_item.attribute_css[i].key === p_key){\n\t    ret = p_structure_item.attribute_css[i].default;\n\t}\n    }\n    return ret;\n};\n\nBIQWidgetElementParser.prototype.defaultFormValues = function(p_el){\n    var self = this;\n    var default_values={\"widget_id\": p_el.data('biqWidgetId'), \"widget_type\": p_el.data('biqWidgetType'), \"css_inline\": p_el.attr('style'),\n        \"classes\":self.getClassNames( p_el )};\n    return default_values;\n};\n/**\n * Get class name which belong to attributes only, by remove first 2 classes which is default to be exist ( 'biq-widgets' and a class name of widget )\n * \n * @param {String} p_class_names is the value of 'class' attribute at HTML element\n * @returns {String} contain class filtered ( 2 default class removed )\n */\nBIQWidgetElementParser.prototype.getClassNames = function( p_el ){\n    var css_default_arr = typeof p_el.data('biqCssDefault') !=='undefined'?\n            $b.trim( p_el.data('biqCssDefault') ).split(' ')\n            :[];\n    css_default_arr.push('biq-widgets');\n    css_default_arr.push('biq-container');\n    var css_all_arr = $b.trim( p_el.attr('class') ).split(' ');\n    \n    return css_all_arr.diff( css_default_arr ).join(' ');\n};\n//BIQWidgetElementParser.prototype.getClassNames = function( p_class_names ){\n//    var ret = \"\";\n//    var class_names_arr = p_class_names.split(' ');\n//    class_names_arr.splice(0,2);\n//    for(var i=0; i<class_names_arr.length; i++){\n//\tret = ret+class_names_arr[i];\n//\tif(i !== (class_names_arr.length-1) ){\n//\t    ret = ret+' ';\n//\t}\n//    }\n//    return ret;\n//};\n/*\n * @param {String) p_str is the type name of widget based on convention usualy generated for data-biq-widget-type html attribute\n * @returns {String} Return the string name of function converted from data-biq-widget-type. By converting from underscore separator to camelCase\n */\nBIQWidgetElementParser.prototype.typeToFunction = function(p_str){\n    var ret = '';\n    var type_arr = p_str.split('_');\n    for(var i=0; i<type_arr.length; i++){\n        var type_component = type_arr[i];\n        if(i!==0) type_component = type_component.ucfirst();\n        ret = ret + type_component;\n    }\n    return ret;\n};\n","var biqTab = function($rootScope){//named biqTab\n    return {\n\trestrict : 'E',\n\ttransclude: true,\n\tscope : {\n\t    tabType : '@',//tab/url\n\t    headerHeight: '@', \n\t    containerWidth: '@',//with 'px' / '%' sufix\n\t    ngclass: '='\n\t},\n\tcontroller : ['$scope','$attrs', function($scope, $attrs){\n\t    var self = this;\n\t    var panes = $scope.panes = [];\n//\t    $scope.getStyle = function(){ return 'tst';};\n//\t    console.log(self.style);\n\t    //BEGIN CSS CLASS GENERATE==========================\n\t    $scope.headerHeightClass = function(){\n\t\treturn ' h'+$scope.headerHeight;\n\t    };\n\t    $scope.containerStyle = {};\n\t    if( $attrs.hasOwnProperty( 'containerWidth') ) $scope.containerStyle['width'] = $attrs.containerWidth;\n//\t    $scope.containerStyle = function(){\n//\t\tvar style = '';\n//\t\tif($scope.containerWidth!=='')\n//\t\treturn ' w'+$scope.containerWidth;\n//\t    };\n\t    //END CSS CLASS GENERATE***************************\n\t    $scope.select = function(pane) {\n\t\tangular.forEach(panes, function(pane) {\n\t\t    pane.selected = false;\n\t\t});\n\t\tpane.selected = true;\n\t    };\n\t    $scope.click = function(pane){\n\t\t$scope.select(pane);\n\t\tif($scope.tabType === 'url' ){\n\t\t     window.location = pane.url;\n\t\t}\n\t    };\n\t    self.addPane = function(pane) {\n\t\tif ( (panes.length === 0) || ( typeof pane.active !== 'undefined' ) ) {\n\t\t  $scope.select(pane);\n\t\t}\n\t\tpanes.push(pane);\n\t    };\n\t}],\n\ttemplate: '<div class=\"biq-tab disable-select{{headerHeightClass()}}\">\\n\\\n\t    <ul>\\n\\\n\t      <li ng-repeat=\"pane in panes\" ng-class=\"{active:pane.selected}\">\\n\\\n\t\t<span ng-click=\"click(pane)\">{{pane.title}}</span>\\n\\\n\t      </li>\\n\\\n\t    </ul>\\n\\\n\t    <div ng-show=\"tabType===\\'tab\\'\" class=\"tab-content\" ng-transclude ng-style={{containerStyle}}></div>\\n\\\n\t  </div>'\n    };\n//    \"@\"   (  Text binding / one-way binding )\n//\"=\"   ( Direct model binding / two-way binding )\n//\"&\"   ( Behaviour binding / Method binding  )\n};\n\nvar biqTabItem = function(){\n    return {\n\trequire: '^^biqTab',\n\trestrict: 'E',\n\ttransclude: true,\n\tscope: {\n\t  title: '@', url:'@', active:'@'\n\t},\n\tlink: function(scope, element, attrs, biqTabCtrl) {\n\t    biqTabCtrl.addPane(scope);\n\t},\n\ttemplate:\n\t    '<div class=\"tab-pane animate-show\" ng-show=\"selected\">\\n\\\n\t\t<div ng-transclude></div>\\n\\\n\t    </div>'\n    };\n};\n","/*\n *Created by: Bayu candra <bayucandra@gmail.com>\n *Creation Year: 2016\n */\n\nvar bngapp=angular.module('BApp',['ngAnimate','ngMaterial', 'lfNgMdFileInput', 'bsLoadingOverlay', 'ui-notification', 'ngMessages'])\n.controller('BCtrl', function($scope, $mdMedia, $rootScope, BIQThemeManager){\n    $rootScope.BIQThemeManager = BIQThemeManager;\n    $rootScope.BIQThemeManager.init();\n    $rootScope.scopeCtrl = $scope;\n\t\n    angular.element(document).ready(function(){\n\t\n    });\n})\n.factory('BIQThemeDialog', function($mdDialog, $mdMedia, bsLoadingOverlayService, Notification, $rootScope, $timeout){\n    var ref = new BIQThemeDialog($mdDialog, $mdMedia, bsLoadingOverlayService, Notification, $rootScope, $timeout);\n    \n    return ref;\n})\n.factory('BIQThemeManager', function(Notification, BIQThemeDialog, BIQWidgetElementParser){\n    var ref = new BIQThemeManager(Notification, BIQThemeDialog, BIQWidgetElementParser);\n//    ref.BIQWidgetElementParser = BIQWidgetElementParser;\n//    ref.dialog = BIQThemeDialog;\n    return ref;\n})\n.factory( 'BIQWidgetElementParser', function(){\n    var ref = new BIQWidgetElementParser;\n    return ref;\n})\n.directive('biqTab', biqTab)\n.directive( 'biqTabItem', biqTabItem )\n.config(function(NotificationProvider) {\n    NotificationProvider.setOptions({\n\tdelay: 2500,\n\tstartTop: 20,\n\tstartRight: 10,\n\tverticalSpacing: 20,\n\thorizontalSpacing: 20,\n\tpositionX: 'left',\n\tpositionY: 'bottom'\n    });\n  });"],"sourceRoot":"/source/"}