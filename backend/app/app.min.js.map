{"version":3,"sources":["biq-widget-structure.js","biq-theme-dialog.js","biq-theme-manager.js","biq-widget-element-parser.js","biq-tab.js","app.js"],"names":["BIQWidgetStructure","BIQThemeDialog","$mdDialog","$mdMedia","bsLoadingOverlayService","Notification","$rootScope","$timeout","$mdSidenav","self","this","biq_theme_manager","customFullScreen","elementWrapperDefault","target","document","getElementById","main_wrapper_id","template","params","show","ev","controller","parent","angular","element","body","targetEvent","clickOutsideToClose","escapeToClose","fullscreen","then","submit","hide","buttons","$scope","input_value","values","structure","text","cancel","message","type","widget_not_ready","inputs","list","mode","server_data","date","Date","getTime","hasOwnProperty","api","removeAll","formData","FormData","file","$b","model_value","data","$modelValue","bisnull","append","attr","lfFile","img_name_old","JSON","stringify","widget_type","widget_id","functions","maskShow","ajax","url","ajaxurl","async","cache","contentType","processData","success","response","response_json","parse","is_found","json_data","replaceWith","html","BIQThemeManager","widgetHoverApply","maskHide","error","update","img_name","i","length","copy","delete_select","title","find","close","console","log","deleteConfirm","open","no_submit_callback","deleteCancel","p_success","no_submit","key","value","files","error_message","dialog","$watch","wantRestore","wantsFullScreen","customFullscreen","referenceId","start","stop","$q","BIQWidgetElementParser","structure_item","$http","BIQWidgetStructureDefaults","attribute_css","label","placeholder","prototype","contact_email_simple","attribute_main","required","input_attrs","default","template_uri","contact_phone_simple","logo","menu_main","heading_section_left","category_list","slider","flex","inputs_disp","tag","footer_short_description","textarea_attrs","input_wrapper_attrs","post_feed","init","ready","loading","hoverToEdit","window","onbeforeunload","hover_to_edit","widget_sel","hide_delay","is_editing","hide_timeout_obj","p_delay","auto_hide","self2","onmouseleave","setTimeout","set_overlay_sizes","p_callback","el_sel_position","offset","css","left","top","width","outerWidth","height","outerHeight","hover_to_edit_html","on","e","editWidget","clearTimeout","p_widget_id","selector","widget_input","generateWidgetInputAll","main","getValues","when","widget_not_ready_el","children","input_model","ret","layout","widget_structure_name","html_form_main","formMainConstruct","html_form_css","generateInputForm","attribute_main_item","two_col","p_structure_item","ret_html","spacer","p_params_obj","is_required","ngRequired","textarea","radio","p_selector","p_timeout","loading_html","getLayoutClass","layout_class_arr","layout_el","closest","hasClass","p_widget_type","p_widget_sel","p_structure_sel","widget_function","typeToFunction","contactEmailSimple","p_el","defaultFormValues","image_src","getDefaultValue","menuMain","headingSectionLeft","prop","toLowerCase","categoryList","deferred","defer","method","action","query_type","resolve","xhr","status","reject","promise","footerShortDescription","postFeed","toString","p_key","default_values","css_inline","classes","getClassNames","css_default_arr","trim","split","push","css_all_arr","diff","join","p_str","type_arr","type_component","ucfirst","biqTab","restrict","transclude","scope","tabType","headerHeight","containerWidth","ngclass","$attrs","panes","headerHeightClass","containerStyle","select","pane","forEach","selected","click","location","addPane","active","biqTabItem","require","link","attrs","biqTabCtrl","bngapp","module","scopeCtrl","remove","factory","ref","directive","config","NotificationProvider","setOptions","delay","startTop","startRight","verticalSpacing","horizontalSpacing","positionX","positionY"],"mappings":"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","file":"../app.min.js","sourcesContent":["function BIQWidgetStructure(){\n\n}\n/*\n * 'key' is the main key of $atts at wordpress shortcode function. If 'key' = 'content, it is eman $content\n */\nBIQWidgetStructureDefaults = {\n    'attribute_css' :[\n\t{ 'key' : 'css_inline', 'type' : 'text', 'label' : 'Inline CSS'},\n\t{ 'key' : 'classes', 'type' : 'text', 'label' : 'CSS Classes', 'placeholder' : 'Sparate by space for multiple class name' }\n    ]\n};\nBIQWidgetStructure.prototype.contact_email_simple = {\n    'title' : 'Setting - Contact Email Simple',\n    'attribute_main' : [\n\t{ 'key' : 'content', 'type' : 'text', 'label' : 'Email Address', 'required':true, 'input_attrs':'type=\"email\"' },\n\t{ 'key' : 'icon_type', 'type' : 'radio', 'label' : 'Icon type', \n\t    'value' : [\n\t\t{ 'label': 'Image', 'value': 'image'},\n\t\t{ 'label': 'Class', 'value': 'class'}\n\t    ] \n\t},\n\t{ 'key' : 'icon_value', 'type' : 'text', 'label' : 'URL Image / class',\n            'default': template_uri+'/images/biq/widgets/contact-email-simple/icon-contact-email-21x14.png'\n\t    , 'placeholder' :'Leave empty for default value' }\n    ],\n    'attribute_css' :[\n\t{ 'key' : 'css_inline', 'type' : 'text', 'label' : 'Inline CSS'},\n\t{ 'key' : 'classes', 'type' : 'text', 'label' : 'CSS Classes', 'placeholder' : 'Sparate by space for multiple class name' }\n    ]\n};\nBIQWidgetStructure.prototype.contact_phone_simple = {\n    'attribute_main' : [\n\t\n    ]\n};\n\nBIQWidgetStructure.prototype.logo = {\n    'title' : 'Setting - Logo',\n    'attribute_main':[\n        { 'key': 'img_file_name', 'type':'file', 'label':'Browse' },\n        { 'key' : 'img_title', 'type':'text', 'label':'Image Title' },\n        { 'key' : 'img_alt', 'type':'text', 'label':'Alternative text' }\n    ],\n    'attribute_css' :[\n\t{ 'key' : 'css_inline', 'type' : 'text', 'label' : 'Inline CSS'},\n\t{ 'key' : 'classes', 'type' : 'text', 'label' : 'CSS Classes', 'placeholder' : 'Sparate by space for multiple class name' }\n    ]\n};\n\nBIQWidgetStructure.prototype.menu_main = {\n    'title' : 'Setting Main Menu',\n    'attribute_main':[\n        { 'key': 'float', 'type' : 'radio', 'label' : 'Float', \n\t    'value' : [\n\t\t{ 'label': 'Right', 'value': 'right'},\n\t\t{ 'label': 'Left', 'value': 'left'}\n\t    ]\n        }\n    ],\n    'attribute_css' :[\n\t{ 'key' : 'css_inline', 'type' : 'text', 'label' : 'Inline CSS'},\n\t{ 'key' : 'classes', 'type' : 'text', 'label' : 'CSS Classes', 'placeholder' : 'Sparate by space for multiple class name' }\n    ]\n};\nBIQWidgetStructure.prototype.heading_section_left = {\n    'title' : 'Setting - Heading section left',\n    'attribute_main' :[\n        {'key':'content', 'type':'text', 'label': 'Header Text', 'required':true},\n        {'key':'tag_name', 'type':'radio', 'label':'Tag name',\n            'value': [\n                { 'label': 'H4','value':'h4' },\n                { 'label': 'H3','value':'h3' },\n                { 'label': 'H2','value':'h2' },\n                { 'label': 'H1','value':'h1' }\n            ]\n        },\n        {'key':'highlight', 'type':'radio', 'label':'Highlight',\n            'value': [\n                { 'label':'<font style=\"color:#113481\">Default</font>', 'value':'highlight-default' },\n                { 'label':'<font style=\"color:#df1f26\">Red</font>', 'value':'highlight-red' },\n                { 'label':'None', 'value':'none' }\n            ]\n        }\n    ],\n    'attribute_css' : BIQWidgetStructureDefaults.attribute_css\n};\nBIQWidgetStructure.prototype.category_list = {\n    'title' : 'Setting - Category list',\n    'attribute_main' :[\n        { 'key':'taxonomy', 'type':'text', 'label':'Taxonomy', 'default':'product_cat' },\n        { 'key':'orderby', 'type':'radio', 'label':'Order By',\n            'value':[\n                { 'label': 'name', 'value':'name' }, { 'label':'description', 'value':'description' }, {'label':'slug', 'value':'slug'}\n            ]\n        },\n        { 'key':'order', 'type':'radio', 'label':'Order',\n            'value':[\n                {'label':'ASC', 'value':'ASC'}, {'label':'DESC', 'value':'DESC'}\n            ]\n        },\n        { 'key':'hide_empty', 'type':'radio', 'label':'hide_empty',\n            'value':[\n                {'label':'true', 'value':'1'}, {'label':'false', 'value':'0'}\n            ]\n        },\n        { 'key':'hierarchical', 'type':'radio', 'label':'hierarchical',\n            'value':[\n                {'label':'true', 'value':'1'}, {'label':'false', 'value':'0'}\n            ]\n        }\n    ],\n    'attribute_css' : BIQWidgetStructureDefaults.attribute_css\n};\nBIQWidgetStructure.prototype.slider = {\n    'title' : 'Setting - Slider',\n    'attribute_main':[\n        { 'key':'slider', type:'list', 'label':'Upload Slider',\n            'inputs':[\n                { type: 'two_col', inputs:[\n                        { key: 'title', type:'text', 'label':'Title', flex: 70 },\n                        {type: 'spacer', flex: 5},\n                        { key: 'title_color', type:'text', 'label':'Color', 'placeholder': '#hex', flex: 30 }\n                ] },\n                { type: 'two_col', inputs:[\n                        { key: 'caption', type:'text', 'label':'Caption', flex: 70 },\n                        {type: 'spacer', flex: 5},\n                        { key: 'caption_color', type:'text', 'label':'Color', 'placeholder': '#hex', flex: 30 }\n                ] },\n                { 'key':'url', type:'text', 'label':'URL' }\n            ],\n            'inputs_disp':[\n                {'key':'title', 'tag':'h6'},{'key':'caption','tag':'div'}\n            ]\n        }\n    ],\n    'attribute_css' : BIQWidgetStructureDefaults.attribute_css\n};\nBIQWidgetStructure.prototype.footer_short_description = {\n    'title' : 'Setting - Footer short description',\n    'attribute_main':[\n        { 'key':'title', 'type':'text', 'label':'Title' },\n        { 'key':'description_source', 'type':'radio', 'label' :'Description source',\n            'value':[\n                {'label':'Custom', 'value':'custom'}, {'label':'Equal Home Meta', 'value':'equal_to_meta'}\n            ]\n        },\n        { 'key':'description', 'type':'textarea',\n            'textarea_attrs' : 'md-maxlength=\"254\" rows=\"5\"',\n            'label':'Description', 'input_wrapper_attrs':'ng-show=\"input_value.description_source===\\'custom\\'\"' }\n    ],\n    'attribute_css' : BIQWidgetStructureDefaults.attribute_css\n};\nBIQWidgetStructure.prototype.post_feed = {\n    'title': 'Setting - Post feed',\n    'attribute_main':[\n        { 'key' : 'post_category', 'type':'text', 'label':'Post Category' },\n        { 'key' : 'limit', 'type':'text', 'label':'Limit' },\n        { 'key' : 'clickable', 'type':'radio', 'label':'Clickable',\n            'value' : [\n                {'label': 'true', 'value':'true'},\n                {'label':'false', 'value':'false'}\n            ]\n        },\n        { 'key' : 'staggered', 'type':'radio', 'label':'Staggered',\n            'value' :[\n                {'label': 'true', 'value': 'true'},\n                {'label': 'false', 'value': 'false'}\n            ]\n        },\n        { 'key' : 'type', 'type':'radio', 'label': 'Layout Type',\n            'value' : [\n                {'label' : '2 col circle', 'value' : 'two_col_circle'},\n                {'label' : '2 col rect.', 'value' : 'two_col_rect'}\n            ]\n        },\n        { 'key':'size', 'type': 'radio', 'label':'Size',\n            'value' :[\n                {'label':'Thumbnail', 'value':'thumbnail'},\n                {'label':'Medium', 'value':'medium'},\n                {'label':'Medium Large', 'value':'medium_large'}\n            ]\n        }\n    ],\n    'attribute_css' : BIQWidgetStructureDefaults.attribute_css\n};\n","/*\n *Created by: Bayu candra <bayucandra@gmail.com>\n *Creation Year: 2016\n*/\nfunction BIQThemeDialog( $mdDialog, $mdMedia, bsLoadingOverlayService, Notification, $rootScope, $timeout, $mdSidenav ){\n    var self=this;\n    self.biq_theme_manager = null;\n    self.customFullScreen=$mdMedia('xs') || $mdMedia('sm');\n    self.elementWrapperDefault= { target : document.getElementById(main_wrapper_id) };\n    self.template = null;//SET BY BIQThemeManager\n    self.params = {};\n    self.show = function(ev, params){\n        self.params = params;//Pass this to the $scope of controller\n//        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs'))  && self.customFullscreen;\n        $mdDialog.show({\n            controller: self.controller,\n            template: self.template,\n    //      disableParentScroll: false,\n            parent: angular.element(document.body),\n            targetEvent: self.elementWrapperDefault,\n            clickOutsideToClose:true, escapeToClose:true,// disable later escapeToClose on masking\n            fullscreen: self.customFullScreen\n        })\n        .then(function(submit) {\n        }, function() {//Must be same function as 'hide' in the controller\n            self.hide();\n        });\n    };\n    self.buttons = null;//link 'buttons' object at $scope\n    self.controller = function($scope, $mdDialog) {\n        $scope.input_value = self.params.values;\n        $scope.structure = self.params.structure;\n        $scope.buttons = {\n            text: {submit:'Submit',cancel:'Cancel'},\n            message: { \n                cancel:{ text: 'Widget edit canceled', type:'warning'} \n            } \n        };\n        self.buttons = $scope.buttons;\n        \n        $scope.widget_not_ready = self.params.widget_not_ready;\n        $scope.inputs ={ list:{ mode:'',values:{}, server_data:[] }, date:new Date().getTime() };\n        if( $scope.input_value.hasOwnProperty('list') ){\n            $scope.inputs.list.server_data = $scope.input_value.list;\n            $scope.buttons.text.cancel = 'Finish';\n            $scope.buttons.message.cancel.text = 'Widget edit finish';\n            $scope.buttons.message.cancel.type = 'success';\n        }\n        $scope.inputs.list.submit = function(){//Create / Submit\n            if($scope.inputs.list.mode===''){\n                $scope.inputs.list.values = {};\n                $scope.inputs.list.api.removeAll();\n                $scope.inputs.list.mode ='create';\n                return;\n            }\n            var formData = new FormData();\n            //BEGIN FILE UPLOAD========\n            var file = $b('.lf-ng-md-file-input');\n            var model_value = angular.element($b(file[0])).data('$ngModelController').$modelValue[0];\n            if(bisnull(model_value) && ($scope.inputs.list.mode==='create')){\n                Notification(\"Error, you must select file to upload\",\"error\");\n                return;\n            }\n            if(!bisnull(model_value) && ( model_value.hasOwnProperty('lfFile') )){//if has file\n                formData.append(\n                    $b(file[0]).attr('lf-files'),\n                    model_value.lfFile\n                );\n            }\n            if($scope.inputs.list.hasOwnProperty('img_name_old')){\n                formData.append( 'img_name_old', $scope.inputs.list.img_name_old );\n            }\n            formData.append( 'file_key', $b(file[0]).attr('lf-files') );\n            formData.append( 'mode', $scope.inputs.list.mode );\n            //END FILE UPLOAD****\n            //BEGIN INPUT======\n//            for(var key in $scope.inputs.list.values){\n//                var value =  !bisnull($scope.inputs.list.values[key]) ? $scope.inputs.list.values[key] : '';\n//                formData.append(key, value);\n//            }\n            var inputs = JSON.stringify($scope.inputs.list.values);\n            formData.append('inputs', inputs );\n            formData.append('widget_type', $scope.input_value.widget_type);\n            formData.append('widget_id', $scope.input_value.widget_id);\n            //END INPUT********\n//            formData.append('create_record', true);\n            formData.append('action', 'widget_save');//The wordpress ajax name\n            self.functions.maskShow('widget-dialog');\n            $b.ajax({\n                'url': ajaxurl,\n                'type':'POST', 'data':formData,\n                'async': false, 'cache': false,\n                'contentType': false, 'processData': false,\n                'success':function(response){\n                    var response_json = JSON.parse(response);\n                    if(response_json.is_found){\n//                        $scope.inputs.list.server_data.splice( 0, $scope.inputs.list.server_data.length );\n                        \n                        var server_data = JSON.parse(response_json.json_data);\n                        $scope.inputs.list.server_data = server_data;\n//                        angular.copy(server_data, $scope.inputs.list.server_data);\n                        $scope.inputs.list.values = {};\n                        $scope.inputs.list.mode = '';\n                        $scope.inputs.list.api.removeAll();\n                        \n                        $b('#biq-sns-be-main [data-biq-widget-id=\"'+response_json.widget_id+'\"]').replaceWith(response_json.html);\n                        $timeout(function(){\n                            $rootScope.BIQThemeManager.widgetHoverApply(response_json.widget_id);\n                        });\n                        Notification(\"Widget succesfully updated\",\"success\");\n                    }else{\n//                        var error_message = !bisnull(response_json.html) ? response_json.html : 'Empty response, seem widget functions not defined properly.';\n                        Notification(\"Widget input failed: \"+response_json.message, \"error\");\n                    }\n                    self.functions.maskHide('widget-dialog');\n                },\n                'error':function(response){\n                    Notification(\"There is error with server\",\"error\");\n                }\n            });\n        };\n        $scope.inputs.list.update = function(img_name){\n            $scope.inputs.list.mode = 'update';\n            var inputs = {};\n            for( var i=0; i<$scope.inputs.list.server_data.length;i++ ){\n                if( $scope.inputs.list.server_data[i].img_name === img_name ){\n                    angular.copy($scope.inputs.list.server_data[i].inputs, inputs);\n                }\n            }\n            $scope.inputs.list.values = inputs;\n            $scope.inputs.list.img_name_old = img_name;\n            $scope.inputs.date = new Date().getTime();\n        };\n        $scope.inputs.list.delete = function(){\n            var formData = new FormData();\n            var delete_select = $scope.inputs.list.delete_select;//set at deleteConfirm() parameters\n            var img_name = delete_select.img_name;\n            var widget_id = delete_select.widget_id;\n            var widget_type = delete_select.widget_type;\n            var title =delete_select.title;\n            \n            formData.append('action', 'widget_save');//The wordpress ajax name\n            formData.append('widget_type', widget_type);\n            formData.append('mode', 'destroy');\n            formData.append('img_name', img_name);\n            formData.append('widget_id', widget_id);\n            self.functions.maskShow('widget-dialog');\n            $b.ajax({\n                'url': ajaxurl,\n                'type':'POST', 'data':formData,\n                'async': false, 'cache': false,\n                'contentType': false, 'processData': false,\n                'success':function(response){\n                    var response_json = JSON.parse(response);\n                    if(response_json.is_found){\n                        var server_data = JSON.parse(response_json.json_data);\n                        $scope.inputs.list.server_data = server_data;\n                        $b('body').find('[data-biq-widget-id=\"'+response_json.widget_id+'\"]').replaceWith(response_json.html);\n                        Notification(\"Success deleting slider: \"+title,\"success\");\n                        $mdSidenav('list-delete-confirm').close();\n                    }else{\n                        Notification(\"Error deleting slider: \"+title, \"error\");\n                    }\n                    self.functions.maskHide('widget-dialog');\n                },\n                'error':function(response){\n                    console.log(response);\n                    Notification(\"There is error with server\",\"error\");\n                    self.functions.maskHide('widget-dialog');\n                }\n            });\n        };\n        $scope.inputs.list.deleteConfirm = function(img_name, widget_id, widget_type, title){\n            $scope.inputs.list.mode = '';\n            $scope.inputs.list.delete_select = { img_name:img_name, widget_id: widget_id, widget_type: widget_type, title:title };\n            $mdSidenav('list-delete-confirm').open();\n        };\n        if( $scope.input_value.hasOwnProperty('list') ){//IF input is 'list' type\n            $scope.input_value.no_submit_callback = $scope.inputs.list.submit;\n        }\n        $scope.inputs.list.deleteCancel = function(){\n            $mdSidenav('list-delete-confirm').close();\n        };\n        \n        $scope.hide = function(p_success) {// for hiding outside scope, pass 'true' to avoid 'Notification()'\n            p_success = typeof p_success !== 'undefined' ? p_success : false;\n            self.hide(p_success);\n            $mdDialog.hide();\n        };\n        $scope.submit = function(submit){\n            if($scope.input_value.no_submit){\n                if( typeof $scope.input_value.no_submit_callback === 'function' ){\n                    $scope.input_value.no_submit_callback();\n                }\n                return;\n            }\n            var formData = new FormData($b('#widget-dialog form')[0]);\n\n            for(var key in $scope.input_value){\n                var value = !bisnull($scope.input_value[key]) ? $scope.input_value[key] : '';\n                formData.append(key, value);\n//                console.log(key+' '+$scope.input_value[key]);\n            }\n            //BEGIN IF has files to upload===============\n            var files = $b('.lf-ng-md-file-input');\n\n            if(files.length){\n                for(var i=0; i<files.length; i++){\n                    var model_value = angular.element($b(files[i])).data('$ngModelController').$modelValue[0];\n                    if(!bisnull(model_value)){\n                        formData.append(\n                            $b(files[i]).attr('lf-files'),\n                            model_value.lfFile\n                        );\n                    }\n                }\n            }\n            //END IF has files to upload****************\n            \n            formData.append('action', 'widget_save');//The Wordpress ajax name\n            self.functions.maskShow('widget-dialog');\n            $b.ajax({\n                'url': ajaxurl,\n                'type' : 'POST', 'data':formData,\n                'async': false, 'cache': false,\n                'contentType': false, 'processData': false,\n                'success':function(response){//ajaxurl is default by Wordpress\n                    var response_json = JSON.parse(response);\n                    if( response_json.is_found ){\n                        $scope.hide(true);\n                        $b('body').find('[data-biq-widget-id=\"'+response_json.widget_id+'\"]').replaceWith(response_json.html);\n                        $timeout(function(){\n                            $rootScope.BIQThemeManager.widgetHoverApply(response_json.widget_id);\n                        });\n                        Notification(\"Widget succesfully updated\",\"success\");\n                    }else{\n                        self.functions.maskHide('widget-dialog');\n                        var error_message = !bisnull(response_json.html) ? response_json.html : 'Empty response, seem widget functions not defined properly.';\n                        Notification(\"Widget update failed: \"+error_message, \"error\");\n                    }\n                }\n            });\n        };\n\n        $scope.dialog = {};\n        $scope.$watch(function(){//WATCH SCREEN SIZE FOR SET FLEX OF DIALOG WIDTH\n            return $mdMedia('gt-sm');\n        }, function(wantRestore){\n            $scope.dialog['flex'] = wantRestore ?  40 : 100;\n            $scope.dialog['height'] = wantRestore ? 'auto' : '100%';\n        });\n\n    \t$scope.$watch(function() {\n            return $mdMedia('xs') || $mdMedia('sm');\n    \t}, function(wantsFullScreen) {\n            self.customFullscreen = (wantsFullScreen === true);\n    \t});\n    };\n    \n    self.hide = function(p_success){\n        p_success = typeof p_success !== 'undefined' ? p_success : false;\n        self.functions.maskHide('widget-dialog');\n        if(!p_success) Notification( self.buttons.message.cancel.text, self.buttons.message.cancel.type);\n//        self.biq_theme_manager.hover_to_edit.is_editing = false;\n//        self.biq_theme_manager.hover_to_edit.onmouseleave();\n    };\n    \n    self.functions = {\n        maskShow : function(referenceId){\n            bsLoadingOverlayService.start({\n              referenceId: referenceId\n            });\n        },\n        maskHide : function(referenceId){\n            bsLoadingOverlayService.stop({\n              referenceId: referenceId\n            });\n        }\n    };\n}\n","/**\n * @file biq-theme-manager.js\n * @brief Main theme manager for widget interface\n * \n * This is the main Class which controll the widget interaction trough angular main module. Will instantiated as angular service. Depend on:\n * - BIQThemeDialog => linked to variable member self.dialog\n * - BIQWidgetElementParser => linked to variable member self.BIQWidgetElementParser\n * <br>Both of them linked as a member / properties, since will result as circular reference if directly put as argument at angular 'factory' declaration.\n * \n * @author Bayu candra <bayucandra@gmail.com>\n*/\n\nfunction BIQThemeManager( Notification, $q, BIQThemeDialog, BIQWidgetElementParser ){\n    var self = this;\n    self.Notification = Notification;\n    self.$q = $q;\n    self.BIQWidgetElementParser = BIQWidgetElementParser;\n    self.structure = new BIQWidgetStructure;\n    self.structure_item = null; // will set at generateWidgetImputAll()\n    self.dialog = BIQThemeDialog; /// <i>self.dialog</i> variable will be referenced to md-dialog to show. Set this class by pointer to those md-dialog.\n}\n\n/**\n * @brief initializing the main Object/Class\n * \n * Run main hover mask functions and set body events\n */\nBIQThemeManager.prototype.init = function(){\n    var self = this;\n    $b(document).ready(function(){\n        self.loading('body', 1500);\n        self.hoverToEdit();\n        window.onbeforeunload=function(){\n            self.loading('body');\n        };\n    });\n};\n\n/**\n * @brief generate overlay mask over widget\n * \n * Will be initialy called by init() function to generate overlay element above widget which will need to edit. \n */\nBIQThemeManager.prototype.hoverToEdit= function(){\n    var self = this;\n    self.hover_to_edit = {\n\twidget_sel : null,//Will be assigned with jQuery(this) on widget hover event => hoverToEdit()\n\thide_delay : 500,\n\tis_editing : false,//If true, prevent auto hide\n\thide_timeout_obj : null,// To handle setTimeout on mouseleave and must cancel by clearTimeout when enter again before delay reached\n\thide: function(p_delay){\n\t    p_delay = typeof p_delay !== 'undefined' ? p_delay : 100;\n\t    $b('.hover-to-edit .highlight').hide(p_delay, function(){\n\t\t$b('.hover-to-edit').hide(0);\n\t    });\n\t},\n\tauto_hide: function(){\n\t    var self2 = this;\n//\t    if(!self2.is_editing){\n\t\tself2.hide();\n//\t    }\n\t},\n\tonmouseleave: function(){\n\t    var self2 = this;\n\t    self2.hide_timeout_obj = setTimeout( function(){ self2.auto_hide();}, self2.hide_delay );\n\t},\n\tset_overlay_sizes : function(p_callback){\n//\t    var self2 = this;\n\t    var el_sel_position = self.hover_to_edit.widget_sel.offset();\n\n\t    $b('.hover-to-edit').css({left : el_sel_position.left+'px', top : el_sel_position.top+'px'});\n\t    $b('.hover-to-edit .highlight').css({\n\t\twidth: self.hover_to_edit.widget_sel.outerWidth(),\n\t\theight: self.hover_to_edit.widget_sel.outerHeight()\n            });\n            if(typeof p_callback === 'function'){\n                p_callback();\n            }\n\t}\n    };\n    \n   var hover_to_edit_html =\n\t   '<div class=\"hover-to-edit\"> \\n\\\n\t\t<div class=\"highlight\" title=\"Double click here to edit\"></div>\\n\\\n\t\t<div class=\"footer\"><div class=\"button edit\">Edit</div></div>\\n\\\n\t    </div>';\n    $b('body').append(hover_to_edit_html);\n    $b('.hover-to-edit .highlight').on('dblclick', function(e){\n\tself.editWidget(e);\n    });\n    $b('.hover-to-edit .footer .button').on('click', function(e){\n\tself.editWidget(e);\n    });\n    $b('.hover-to-edit').on('mouseenter', function(e){\n        self.hover_to_edit.is_editing = false;//temporary unused variable handler\n        clearTimeout(self.hover_to_edit.hide_timeout_obj);\n    });\n    $b('.hover-to-edit').on('mouseleave', function(e){\n        self.hover_to_edit.onmouseleave();\n    });\n    self.widgetHoverApply();\n};\n/**\n * @brief apply hover mask to widget based whether \"individually\" per element or \"all in once\" to all elements\n * \n * The \"individual\" procedure necessary to apply the hover overlay mask only to individual widget after creation.\n * Usually called by biq-theme-dialog.js when submit widget is finished and success\n * <br><br>The \"all in once\" procedure will executed on the first time whole page loaded\n * @param {String} p_widget_id the ID of widget which usually got from AJAX response generated by PHP/Wordpress server,\n *  if omitted / undefined then it is mean for \"all in once procedure\"\n */\nBIQThemeManager.prototype.widgetHoverApply = function(p_widget_id){\n    var self = this;\n    var selector = typeof p_widget_id!=='undefined' ?\n            '.biq-widgets[data-biq-widget-id=\"'+p_widget_id+'\"]'//Only match to specific data-biq-widget-id\n            :'.biq-widgets'; //All widget\n    $b(selector).on('mouseenter', function(e){\n        clearTimeout( self.hover_to_edit.hide_timeout_obj );\n        $b('.hover-to-edit .highlight').stop(false, true);//stop previous animation: $b('.hover-to-edit .highlight').show(200);\n        self.hover_to_edit.widget_sel = null;\n        self.hover_to_edit.widget_sel = $b(this);\n        self.hover_to_edit.set_overlay_sizes(\n            function(){\n                $b('.hover-to-edit').show(0, function(){\n                    $b('.hover-to-edit .highlight').show(200);\n                });\n            }\n        );\n    });\n};\n/**\n * @brief executed on \"edit\" button click or mask overlay doubleclick\n * \n * 1.generate template for md-dialog interface and input content <br>\n * 2.show the md-dialog <br>\n * 3.hide the overlay mask interface <br>\n * \n * @param {Object} e DOM emitted on the event click button and doubleclick overlay mask\n */\nBIQThemeManager.prototype.editWidget = function(e){\n    var self = this;\n    \n    self.hover_to_edit.is_editing = true;\n    var widget_input = self.generateWidgetInputAll();\n    self.dialog.biq_theme_manager = self;\n\n    self.dialog.template = \n\t'\\\n\t    <md-dialog id=\"widget-dialog\" aria-label=\"'+widget_input.title+'\" class=\"bs-loading-container\" \\\n\t\t     bs-loading-overlay=\"widget-dialog\" bs-loading-overlay-template-url=\"'+template_uri+'/backend/app/template/dialog/dialog-default.html\" \\\n\t\t     bs-loading-overlay-delay=\"1000\" flex=\"{{dialog.flex}}\" style=\"height:{{dialog.height}}\" \\\n\t\tng-cloak> \\\n\t    <form name=\"widgetForm\" class=\"biq-dialog\"> \\\n\t\t<md-toolbar class=\"bdialog-toolbar\"> \\\n\t\t  <div class=\"md-toolbar-tools\"> \\\n\t\t    <h2>'+widget_input.title+'</h2> \\\n\t\t    <span flex></span> \\\n\t\t    <md-button class=\"md-icon-button\" ng-click=\"hide()\"> \\\n\t\t      <md-icon md-svg-src=\"'+template_uri+'/images/icon/dialog_close.svg\" aria-label=\"Close dialog\"></md-icon> \\\n\t\t    </md-button> \\\n\t\t  </div> \\\n\t\t</md-toolbar> \\\n\t\t<md-dialog-content layout=\"column\" layout-padding ng-if=\"widget_not_ready==null\"> \\\n                    <input type=\"hidden\" name=\"widget_type\" ng-model=\"input_value.widget_type\">\\\n                    <input type=\"hidden\" name=\"widget_id\" ng-model=\"input_value.widget_id\">\\\n\t\t\t<biq-tab tab-type=\"tab\" header-height=\"40\" style=\"margin:5px;\" container-width=\"100%\">\\\n\t\t    '+\n\t\t\twidget_input.main + widget_input.css\n\t\t    +'  </biq-tab>\\\n\t\t</md-dialog-content> \\\n\t\t<md-dialog-actions layout=\"row\" ng-if=\"widget_not_ready==null\"> \\\n\t\t    <span flex></span> \\\n\t\t    <md-button type=\"submit\" ng-hide=\"input_value.no_submit\" ng-click=\"submit(true)\" class=\"md-primary\" md-autofocus>Submit</md-button> \\\n\t\t    <md-button ng-click=\"hide()\" style=\"margin-left:10px;\">{{buttons.text.cancel}}</md-button> \\\n\t\t</md-dialog-actions> \\\n                    \\\n                <md-dialog-content ng-if=\"widget_not_ready!=null\" layout-padding>\\\n                    <h4 style=\"color:red;\">Widget not ready for setting:</h4> \\\n                    <h3>{{widget_not_ready.message}}</h3>\\\n                </md-dialog-content>\\\n\t    </form> \\\n\t</md-dialog>';\n    var values = self.BIQWidgetElementParser.getValues(\n            self.hover_to_edit.widget_sel.data('biqWidgetType'), // the type of widget eg : contact_email_simple\n            self.hover_to_edit.widget_sel, self.structure_item\n        );\n    self.$q.when(values).then(//whether promise or not\n        function(data){//the promise data or just data\n            var widget_not_ready = null;\n            var widget_not_ready_el = self.hover_to_edit.widget_sel.children('.widget-not-ready');\n            if( widget_not_ready_el.length ){\n                widget_not_ready = {message: widget_not_ready_el.html()};\n            }\n        //    values[\"layout\"] = self.getLayoutClass();//currently unused, used widget_id instead via BIQWidgetElementParser on each\n            self.dialog.show(e, {values: data, structure: self.structure_item, widget_not_ready:widget_not_ready});\n\n            self.hover_to_edit.onmouseleave();\n        });\n};\n/**\n * @brief Generate input markup element for md-dialog interface\n * \n * Produce {Object} data type, has 2 main properties. One is 'main' for the main widget input, the other is 'css' for inline and classes option.\n * @returns {Object} ret return object for input at md-dialog : <br>\n * - main : for main widget setting input\n * - css : for css input, usually 'inline' and 'classes'\n * - title: for using as md-dialog title\n * - layout: currently unused\n */\nBIQThemeManager.prototype.generateWidgetInputAll = function(input_model){\n    var self = this;\n    var ret = {main : '-', css : '-', title: '-', layout: ''};//layout is for the main layout root ( \"header\", \"body\" or \"footer\" )\n    //BEGIN CONVERT CLASS NAME TO STRUCTURE NAME Eg. contact-email-simple to contact_email_simpleXXXXXXXX change to using data-\n//    var widget_classes = self.hover_to_edit.widget_sel.attr('class');\n//    var widget_classes_split = widget_classes.split(' ');\n    var widget_structure_name = self.hover_to_edit.widget_sel.data('biqWidgetType');//widget_classes_split[1].replace(/-/g, '_');\n    //END CONVERT CLASS NAME TO STRUCTURE ===============\n    self.structure_item = self.structure[widget_structure_name];\n    \n    var html_form_main = self.formMainConstruct();\n    ret.main = '<biq-tab-item title=\"Main\">'+html_form_main+'</biq-tab-item>';\n    \n    input_model = typeof input_model !== 'undefined' ? input_model : 'input_value.';\n    \n    var html_form_css = '';\n    for(var i=0; i<self.structure_item.attribute_css.length; i++){\n\tvar attribute_css = self.structure_item.attribute_css[i];\n        \n        html_form_css = html_form_css + self.generateInputForm[ attribute_css.type ]( attribute_css, input_model );\n        \n//\tswitch( attribute_css.type ){\n//\t    case \"text\":\n//\t\thtml_form_css = html_form_css + self.generateInputForm.text( attribute_css, input_model );\n//\t\tbreak;\n//\t    case \"radio\":\n//\t\thtml_form_css = html_form_css + self.generateInputForm.radio( attribute_css, input_model );\n//\t\tbreak;\n//\t}\n    }\n    ret.css = '<biq-tab-item title=\"CSS\">'+html_form_css+'</biq-tab-item>';\n    \n    ret.title = self.structure_item.title;\n//    ret.layout = self.getLayoutClass(); //currently unused\n//    self.getStructureIdx();\n    return ret;\n};\n/**\n * @brief Convert all structure data records to HTML input form based on functions inside generateInputForm\n * @params {Object} attribute_main by default using selected widget structure data, but it can be overide with other structure data\n * @returns {String} string in HTML format of input form\n */\nBIQThemeManager.prototype.formMainConstruct = function( attribute_main, input_model ){\n    var self = this;\n    var html_form_main = '';\n    input_model = typeof input_model !== 'undefined' ? input_model : 'input_value.';\n    attribute_main = typeof attribute_main !== 'undefined' ? attribute_main : self.structure_item.attribute_main;\n    for(var i=0; i<attribute_main.length; i++){\n\tvar attribute_main_item = attribute_main[i];\n        \n        html_form_main = html_form_main + self.generateInputForm[ attribute_main_item.type ]( attribute_main_item,input_model );\n//\tswitch( attribute_main_item.type ){\n//\t    case \"text\":\n//\t\thtml_form_main = html_form_main + self.generateInputForm.text( attribute_main_item,input_model );\n//\t\tbreak;\n//\t    case \"textarea\":\n//\t\thtml_form_main = html_form_main + self.generateInputForm.textarea( attribute_main_item,input_model );\n//\t\tbreak;\n//\t    case \"radio\":\n//\t\thtml_form_main = html_form_main + self.generateInputForm.radio( attribute_main_item,input_model );\n//\t\tbreak;\n//            case \"file\":\n//                html_form_main = html_form_main + self.generateInputForm.file( attribute_main_item );\n//                break;\n//            case \"list\":\n//                html_form_main = html_form_main + self.generateInputForm.list( attribute_main_item,input_model );\n//                break;\n//\t}\n    }\n    return html_form_main;\n};\n/**\n * @brief Generate input form per element to call in generateWidgetInputAll()\n * \n * The element produced in angular material style. Will call inside loop check each element of 'main' and 'css' tab.\n */\nBIQThemeManager.prototype.generateInputForm = {\n    two_col : function( p_structure_item, input_model ){\n        var self = this;\n        var ret_html = '<div layout=\"row\">';\n        var inputs = p_structure_item.inputs;\n        for( var i=0; i < inputs.length; i++ ){\n            ret_html = ret_html + self[inputs[i].type]( inputs[i], input_model, {flex: inputs[i].flex} );\n        }\n        ret_html = ret_html+'</div>';\n        return ret_html;\n    },\n    spacer: function(p_structure_item, input_model, p_params_obj){//1st and 2nd params just dummy\n        p_params_obj = typeof p_params_obj !== 'undefined' ? p_params_obj : {};\n        var flex = p_params_obj.hasOwnProperty('flex') ? p_params_obj.flex : '1';\n        return '<div flex=\"'+flex+'\"></div>';\n    },\n    text : function( p_structure_item, input_model, p_params_obj ){//p_params_obj : { flex: 1 }\n        p_params_obj = typeof p_params_obj !== 'undefined' ? p_params_obj : {};\n\tvar is_required = ( p_structure_item.hasOwnProperty('required') && (p_structure_item.required) );\n\tvar ngRequired = is_required ? ' ng-required=\"true\"' : '';\n        var input_wrapper_attrs = p_structure_item.hasOwnProperty( 'input_wrapper_attrs' ) ?\n                ' '+p_structure_item.input_wrapper_attrs\n                : '';\n\tvar input_attrs = p_structure_item.hasOwnProperty('input_attrs') ? ' '+p_structure_item.input_attrs : '';\n\tvar placeholder = bisnull(p_structure_item.placeholder) ? '' : '( '+p_structure_item.placeholder+' )';\n\n        var flex = p_params_obj.hasOwnProperty('flex') ? 'flex=\"'+p_params_obj.flex+'\"' : 'flex';\n\tvar ret_html = \n\t\t'<md-input-container class=\"md-block\" '+flex+' '+input_wrapper_attrs+'>'\n\t\t    +'<label>'+p_structure_item.label+': '+placeholder+'</label> \\\n\t\t    <input name=\"'+p_structure_item.key+'\"'+ngRequired+' ng-model=\"'+input_model+p_structure_item.key+'\"'+input_attrs+'> \\\n\t\t    <div ng-if=\"'+is_required+'\" ng-messages=\"widgetForm.'+p_structure_item.key+'.$error\"> \\\n\t\t\t<div ng-message=\"required\" style=\"text-align:right;\">'+p_structure_item.label+' is required.</div> \\\n\t\t    </div> \\\n\t\t</md-input-container>';\n\t\n\treturn ret_html;\n    },\n    textarea : function( p_structure_item, input_model ){\n\tvar is_required = ( p_structure_item.hasOwnProperty('required') && (p_structure_item.required) );\n\tvar ngRequired = is_required ? ' ng-required=\"true\"' : '';\n        var input_wrapper_attrs = p_structure_item.hasOwnProperty( 'input_wrapper_attrs' ) ?\n                ' '+p_structure_item.input_wrapper_attrs\n                : '';\n        var textarea_attrs = p_structure_item.hasOwnProperty('textarea_attrs') ?\n                ' '+p_structure_item.textarea_attrs\n                : '';\n\tvar input_attrs = p_structure_item.hasOwnProperty('input_attrs') ? ' '+p_structure_item.input_attrs : '';\n\tvar placeholder = bisnull(p_structure_item.placeholder) ? '' : '( '+p_structure_item.placeholder+' )';\n\tvar ret_html = \n\t\t'<md-input-container class=\"md-block\" flex'+input_wrapper_attrs+'>'\n\t\t    +'<label>'+p_structure_item.label+': '+placeholder+'</label> \\\n\t\t    <textarea ng-model=\"'+input_model+p_structure_item.key+'\" name=\"'+p_structure_item.key+'\"'+ngRequired+input_attrs+textarea_attrs+'> \\n\\\n                    </textarea>\\\n\t\t    <div ng-if=\"'+is_required+'\" ng-messages=\"widgetForm.'+p_structure_item.key+'.$error\"> \\\n\t\t\t<div ng-message=\"required\" style=\"text-align:right;\">'+p_structure_item.label+' is required.</div> \\\n\t\t    </div> \\\n\t\t</md-input-container>';\n\t\n\treturn ret_html;\n    },\n    file : function( p_structure_item ){\n        var ret_html =\n                '<lf-ng-md-file-input lf-files=\"'+p_structure_item.key+'\" lf-browse-label=\"'+p_structure_item.label+'\" \\\n                         accept=\"image/*\" ng-disabled=\"ctrl.disabled01\"> \\\n                    </lf-ng-md-file-input>';\n        return ret_html;\n    },\n    radio : function(p_structure_item, input_model){\n\tvar ret_html=\n\t\t'<md-input-container layout=\"row\">\\n\\\n\t\t    <span class=\"label1\" flex=\"30\">'+p_structure_item.label+'</span>\\n\\\n\t\t    <md-radio-group ng-model=\"'+input_model+p_structure_item.key+'\" layout=\"row\" layout-wrap flex=\"70\">';\n\tfor(var i=0; i< p_structure_item.value.length; i++){\n\t    var label = p_structure_item.value[i].label; var value = p_structure_item.value[i].value;\n\t    ret_html = ret_html + '<md-radio-button value=\"'+value+'\" class=\"md-primary\">'+label+'</md-radio-button>';\n\t}\n\tvar ret_html = ret_html + \n\t\t    '</md-radio-group>\\n\\\n\t\t</md-input-container>';\n\treturn ret_html;\n    },\n    list: function(p_structure_item){\n        var ret_html=\n                '<input type=\"hidden\" name=\"mode\" ng-model=\"inputs.list.mode\"/>'\n                +'<md-content ng-show=\"inputs.list.mode!==\\'\\'\" class=\"animate-show\">'\n                    +'<lf-ng-md-file-input ng-disable=\"inputs.list.mode===\\'update\\'\" lf-files=\"'+p_structure_item.key+'\" lf-api=\"inputs.list.api\" lf-browse-label=\"'+p_structure_item.label+'\" \\\n                             accept=\"image/*\" ng-disabled=\"ctrl.disabled01\"> \\\n                    </lf-ng-md-file-input>'\n                    +BIQThemeManager.prototype.formMainConstruct(p_structure_item.inputs, 'inputs.list.values.')\n                +'</md-content>'\n                +'<div layout=\"row\">'\n                    +'<md-button class=\"md-primary md-raised\" ng-click=\"inputs.list.submit()\">\\n\\\n                            {{(inputs.list.mode==\\'\\')?\\'Add\\': (inputs.list.mode===\\'create\\' ? \\'Submit\\' : \\'Update\\' ) }}\\n\\\n                        </md-button>'\n                    +'<md-button ng-show=\"inputs.list.mode!=\\'\\'\" class=\"md-warn md-raised\" ng-click=\"inputs.list.mode=\\'\\'\">\\n\\\n                            Cancel\\n\\\n                        </md-button>'\n                +'</div>'\n                +'<br>'\n                +'<md-list layout-padding>'\n                    +'<md-list-item ng-repeat=\"record in inputs.list.server_data track by record.img_name\">'\n                        +'<div style=\"height:80px;overflow:hidden;\" layout=\"row\" layout-align=\"center center\"><img ng-cloack ng-src=\"{{record.uri_base}}/thumb_{{record.img_name}}?token={{inputs.date}}\"/></div>'\n                        +'<div style=\"height:80px;overflow:hidden;font-size:1.1rem;\" layout=\"row\" layout-padding layout-align=\"start center\" class=\"flex\">'\n                            +'<span>{{record.inputs.title!==\\'\\' ? record.inputs.title : record.img_name }}</span>'\n                        +'</div>'\n                        +'<div layout=\"column\">'\n                            +'<md-button class=\"md-primary\" style=\"margin:0;\" ng-click=\"inputs.list.update(record.img_name)\">edit</md-button>'\n                            +'<md-button class=\"md-warn\" style=\"margin:0;\" ng-click=\"inputs.list.deleteConfirm(record.img_name, input_value.widget_id, input_value.widget_type, record.inputs.title)\">delete</md-button>'\n                        +'</div>'\n                        +'<md-divider ng-if=\"!$last\"></md-divider>'\n                    +'</md-list-item>'\n                +'</md-list>'\n                +'<md-sidenav class=\"md-sidenav-left md-whiteframe-4dp\" md-component-id=\"list-delete-confirm\" flex style=\"max-width:100%; width:100%;\">'\n                    +'<h3 style=\"text-align:center;\"><font style=\"color:#999999\">Confirm to delete :</font> {{inputs.list.delete_select.title}} ?</h3>\\n\\\n                        <div layout=\"column\" layout-align=\"center center\">\\n\\\n                                <md-button class=\"md-warn md-raised\" ng-click=\"inputs.list.delete()\">\\n\\\n                                    Yes\\n\\\n                                </md-button>\\n\\\n                                <md-button class=\"md-raised\" ng-click=\"inputs.list.deleteCancel()\">\\n\\\n                                    No\\n\\\n                                </md-button>\\n\\\n                        </div>'\n                +'</md-sidenav>';\n        return ret_html;\n    }\n};\n/**\n * @brief display loading inside an element.\n * @param {String} p_selector jQuery format selector where the loading will be displayed\n * @param {Integer} p_timeout Delay timeout for the loading to be displayed ( in millisecond )\n */\nBIQThemeManager.prototype.loading = function(p_selector, p_timeout){// #id or .class\n    var loading_html = '<div id=\"biq-loading\">\\n\\\n\t<div class=\"image\">\\n\\\n\t    <img src=\"'+template_uri+'/images/biq/biq-logo.png\"\\n\\\n\t    <br /><h3>Loading...</h3>\\n\\\n\t</div>\\n\\\n    </div>';\n    $b(p_selector).append(loading_html);\n    if(typeof p_timeout !== 'undefined'){\n\tsetTimeout(function(){\n\t    $b('#biq-loading').hide(200);\n\t},p_timeout);\n    }\n};\n/**\n * Currently unused, basicly it will get to which layout belong: \"header\", \"body\" or \"footer\"\n */\nBIQThemeManager.prototype.getLayoutClass = function(){\n    var self = this;\n    var ret = '';//return class name of main layout wrapper\n    \n    var layout_class_arr = [\"header\", \"body\", \"footer\"];\n    \n    var layout_el = self.hover_to_edit.widget_sel.closest('.layout');\n    for(var i=0; i<layout_class_arr.length; i++){\n\tif( layout_el.hasClass( layout_class_arr[i] ) ) ret = layout_class_arr[i];\n    }\n    return ret;\n};\n","/** @file biq-widget-element-parser.js\n * @brief Parsing HTML DOM element to get the structure data of widget\n *\n *@author Bayu candra <bayucandra@gmail.com>\n *Creation Year: 2016\n*/\nfunction BIQWidgetElementParser($http, $q, Notification){\n    var self = this;\n    self.$http = $http;\n    self.$q = $q;\n    self.Notification = Notification;\n}\n/**\n * Main function to Get values based on widget name by call other functions \n * \n * @param {String} p_widget_type is based on widget type wich is belong to html attribute named data-biq-widget-type which need to convert to function name which is using camel case convention ( by using typeToFunction() function)\n * @param {Object} p_widget_sel HTML element got from jQuery function $('#id'). It is selected widget by click 'Edit' after hovering\n * @param {Object} p_structure_sel Selected structure by matching p_widget_sel and defined at biq-widget-structure.js.\n * @returns {Object} generated by function called with self[p_widget_type] which give reference to a function\n */\nBIQWidgetElementParser.prototype.getValues = function(p_widget_type, p_widget_sel, p_structure_sel){\n    var values = {};\n    var self = this;\n    var widget_function = self.typeToFunction(p_widget_type);\n    values= self[widget_function](p_widget_sel, p_structure_sel);\n    return values;\n};\n/* \n * 1. Expect JQuery element as parameter i.e: $(element)\n * 2. return var values = { main:{ key: value}, css: {} };\n */\nBIQWidgetElementParser.prototype.contactEmailSimple = function( p_el, p_structure_item ){\n//    '<a href=\"mailto:'.$content.'\" class=\"biq-widgets contact-email-simple\"'. $css_inline .'>'\n//\t\t\t.'<div class=\"icon\"><img src=\"'.$icon_value.'\"></div>' \n//\t\t\t.'<div class=\"text\">'. $content .'</div>' \n//\t\t    .'</a>'\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n    \n    values[\"content\"] = p_el.children('.text').html();\n     \n    if( p_el.children('.icon').children('img').length ){\n\tvalues['icon_type'] = 'image';\n\tvar image_src = p_el.children('.icon').children('img').attr('src');\n\tvalues[\"icon_value\"] = image_src === self.getDefaultValue( p_structure_item, 'icon_value' )? '' : image_src ;\n    }else{\n\tvalues['icon_type'] = 'css';\n\tvalues[\"icon_value\"] = p_el.children('.icon').children('span').attr('class');\n    }\n    \n    return values;\n};\nBIQWidgetElementParser.prototype.logo = function(p_el, p_structure_item){\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n    \n    values['img_title'] = p_el.children('img').attr('title');\n    values['img_alt'] = p_el.children('img').attr('alt');\n    \n    return values;\n};\nBIQWidgetElementParser.prototype.menuMain = function(p_el, p_structure_item){\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n\n    values['float'] = p_el.hasClass('right') ? 'right' : 'left';\n    \n    return values;\n};\nBIQWidgetElementParser.prototype.headingSectionLeft = function(p_el, p_structure_item){\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n    values[\"content\"] = p_el.html();\n    values[\"tag_name\"] = p_el.prop(\"tagName\").toLowerCase();\n    if(p_el.hasClass('highlight-default')){\n        values['highlight'] = 'highlight-default';\n    }else if( p_el.hasClass('highlight-red') ){\n        values['highlight'] = 'highlight-red';\n    }else{\n        values['highlight'] = 'none';\n    }\n    return values;\n};\nBIQWidgetElementParser.prototype.categoryList = function(p_el, p_structure_item){\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n    values['taxonomy'] = p_el.data('taxonomy');\n    values['orderby'] = p_el.data('orderby');\n    values['order'] = p_el.data('order');\n    values['hide_empty'] = p_el.data('hideEmpty');\n    values['hierarchical'] = p_el.data('hierarchical');\n    return values;\n};\nBIQWidgetElementParser.prototype.slider = function(p_el, p_structure_item){\n    var self = this;\n    var deferred = self.$q.defer();\n    var values = self.defaultFormValues(p_el);\n    \n    values[\"no_submit\"] = true;\n    values[\"main_attribute\"] = p_structure_item.attribute_main[0];\n\n    $b.ajax({\n        method:'POST', url:ajaxurl,\n        data:{ action:'widget_query', query_type:'slider', widget_id:values.widget_id },\n        'success':function(response){//ajaxurl is default by Wordpress\n            var response_json = JSON.parse(response);\n            values['list'] = response_json.list;\n            deferred.resolve(values);\n        },\n        'error':function(xhr){\n            self.Notification('Error server. Status: '+xhr.status,'error');\n            deferred.reject(values);\n        }\n    });\n\n    return deferred.promise;\n};\nBIQWidgetElementParser.prototype.footerShortDescription = function(p_el, p_structure_item){\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n    values[\"description_source\"] = p_el.data('descriptionSource');\n    values[\"title\"] = p_el.children('.biq-title').html();\n    values[\"description\"] = p_el.data('description');\n    return values;\n};\nBIQWidgetElementParser.prototype.postFeed = function(p_el, p_structure_item){\n    var self = this;\n    var values = self.defaultFormValues(p_el);\n    values['post_category'] = p_el.data('postCategory');\n    values['limit'] = p_el.data('limit');\n    values['clickable'] = p_el.data('clickable').toString();\n    values['staggered'] = p_el.data('staggered').toString();\n    values['type'] = p_el.data('type');\n    values['size'] = p_el.data('size');\n    return values;\n};\n/**\n * Important to get default value of 'key'. Usually necessary when default input can be empty to load based on default value.\n * \n * @param [Object] p_structure_item structure of widget as defined on file biq-widget-structure.js\n * @param {String} p_key key of input / value type\n * @returns {String} the default value\n */\nBIQWidgetElementParser.prototype.getDefaultValue = function(p_structure_item, p_key){\n    var ret = '';\n    for( var i=0; i<p_structure_item.attribute_main.length; i++){\n\tif(p_structure_item.attribute_main[i].key === p_key){\n\t    ret = p_structure_item.attribute_main[i].default;\n\t}\n    }\n    for( var i=0; i<p_structure_item.attribute_css.length; i++){\n\tif(p_structure_item.attribute_css[i].key === p_key){\n\t    ret = p_structure_item.attribute_css[i].default;\n\t}\n    }\n    return ret;\n};\n\nBIQWidgetElementParser.prototype.defaultFormValues = function(p_el){\n    var self = this;\n    var default_values={\"widget_id\": p_el.data('biqWidgetId'), \"widget_type\": p_el.data('biqWidgetType'), \"css_inline\": p_el.attr('style'),\n        \"classes\":self.getClassNames( p_el )};\n    return default_values;\n};\n/**\n * Get class name which belong to attributes only, by remove first 2 classes which is default to be exist ( 'biq-widgets' and a class name of widget )\n * \n * @param {String} p_class_names is the value of 'class' attribute at HTML element\n * @returns {String} contain class filtered ( 2 default class removed )\n */\nBIQWidgetElementParser.prototype.getClassNames = function( p_el ){\n    var css_default_arr = typeof p_el.data('biqCssDefault') !=='undefined'?\n            $b.trim( p_el.data('biqCssDefault') ).split(' ')\n            :[];\n    css_default_arr.push('biq-widgets');\n    css_default_arr.push('biq-container');\n    var css_all_arr = $b.trim( p_el.attr('class') ).split(' ');\n    \n    return css_all_arr.diff( css_default_arr ).join(' ');\n};\n//BIQWidgetElementParser.prototype.getClassNames = function( p_class_names ){\n//    var ret = \"\";\n//    var class_names_arr = p_class_names.split(' ');\n//    class_names_arr.splice(0,2);\n//    for(var i=0; i<class_names_arr.length; i++){\n//\tret = ret+class_names_arr[i];\n//\tif(i !== (class_names_arr.length-1) ){\n//\t    ret = ret+' ';\n//\t}\n//    }\n//    return ret;\n//};\n/*\n * @param {String) p_str is the type name of widget based on convention usualy generated for data-biq-widget-type html attribute\n * @returns {String} Return the string name of function converted from data-biq-widget-type. By converting from underscore separator to camelCase\n */\nBIQWidgetElementParser.prototype.typeToFunction = function(p_str){\n    var ret = '';\n    var type_arr = p_str.split('_');\n    for(var i=0; i<type_arr.length; i++){\n        var type_component = type_arr[i];\n        if(i!==0) type_component = type_component.ucfirst();\n        ret = ret + type_component;\n    }\n    return ret;\n};\n","var biqTab = function($rootScope){//named biqTab\n    return {\n\trestrict : 'E',\n\ttransclude: true,\n\tscope : {\n\t    tabType : '@',//tab/url\n\t    headerHeight: '@', \n\t    containerWidth: '@',//with 'px' / '%' sufix\n\t    ngclass: '='\n\t},\n\tcontroller : ['$scope','$attrs', function($scope, $attrs){\n\t    var self = this;\n\t    var panes = $scope.panes = [];\n//\t    $scope.getStyle = function(){ return 'tst';};\n//\t    console.log(self.style);\n\t    //BEGIN CSS CLASS GENERATE==========================\n\t    $scope.headerHeightClass = function(){\n\t\treturn ' h'+$scope.headerHeight;\n\t    };\n\t    $scope.containerStyle = {};\n\t    if( $attrs.hasOwnProperty( 'containerWidth') ) $scope.containerStyle['width'] = $attrs.containerWidth;\n//\t    $scope.containerStyle = function(){\n//\t\tvar style = '';\n//\t\tif($scope.containerWidth!=='')\n//\t\treturn ' w'+$scope.containerWidth;\n//\t    };\n\t    //END CSS CLASS GENERATE***************************\n\t    $scope.select = function(pane) {\n\t\tangular.forEach(panes, function(pane) {\n\t\t    pane.selected = false;\n\t\t});\n\t\tpane.selected = true;\n\t    };\n\t    $scope.click = function(pane){\n\t\t$scope.select(pane);\n\t\tif($scope.tabType === 'url' ){\n\t\t     window.location = pane.url;\n\t\t}\n\t    };\n\t    self.addPane = function(pane) {\n\t\tif ( (panes.length === 0) || ( typeof pane.active !== 'undefined' ) ) {\n\t\t  $scope.select(pane);\n\t\t}\n\t\tpanes.push(pane);\n\t    };\n\t}],\n\ttemplate: '<div class=\"biq-tab disable-select{{headerHeightClass()}}\">\\n\\\n\t    <ul>\\n\\\n\t      <li ng-repeat=\"pane in panes\" ng-class=\"{active:pane.selected}\">\\n\\\n\t\t<span ng-click=\"click(pane)\">{{pane.title}}</span>\\n\\\n\t      </li>\\n\\\n\t    </ul>\\n\\\n\t    <div ng-show=\"tabType===\\'tab\\'\" class=\"tab-content\" ng-transclude ng-style={{containerStyle}}></div>\\n\\\n\t  </div>'\n    };\n//    \"@\"   (  Text binding / one-way binding )\n//\"=\"   ( Direct model binding / two-way binding )\n//\"&\"   ( Behaviour binding / Method binding  )\n};\n\nvar biqTabItem = function(){\n    return {\n\trequire: '^^biqTab',\n\trestrict: 'E',\n\ttransclude: true,\n\tscope: {\n\t  title: '@', url:'@', active:'@'\n\t},\n\tlink: function(scope, element, attrs, biqTabCtrl) {\n\t    biqTabCtrl.addPane(scope);\n\t},\n\ttemplate:\n\t    '<div class=\"tab-pane animate-show\" ng-show=\"selected\">\\n\\\n\t\t<div ng-transclude></div>\\n\\\n\t    </div>'\n    };\n};\n","/*\n *Created by: Bayu candra <bayucandra@gmail.com>\n *Creation Year: 2016\n */\n\"use strict\";\n\nvar bngapp = angular.module('BApp',['ngAnimate','ngMaterial', 'lfNgMdFileInput', 'bsLoadingOverlay', 'ui-notification', 'ngMessages'])\n.controller('BCtrl', function($scope, $mdMedia, $rootScope, BIQThemeManager, $http, $q){\n    $rootScope.BIQThemeManager = BIQThemeManager;\n    $rootScope.BIQThemeManager.init();\n    $rootScope.scopeCtrl = $scope;\n\t\n    angular.element(document).ready(function(){\n\t$b('.notice').remove();\n    });\n})\n.factory('BIQThemeDialog', function($mdDialog, $mdMedia, bsLoadingOverlayService, Notification, $rootScope, $timeout, $mdSidenav){\n    var ref = new BIQThemeDialog($mdDialog, $mdMedia, bsLoadingOverlayService, Notification, $rootScope, $timeout, $mdSidenav);\n    \n    return ref;\n})\n.factory('BIQThemeManager', function(Notification, $q, BIQThemeDialog, BIQWidgetElementParser){\n    var ref = new BIQThemeManager(Notification, $q, BIQThemeDialog, BIQWidgetElementParser);\n//    ref.BIQWidgetElementParser = BIQWidgetElementParser;\n//    ref.dialog = BIQThemeDialog;\n    return ref;\n})\n.factory( 'BIQWidgetElementParser', function($http, $q, Notification){\n    var ref = new BIQWidgetElementParser($http, $q, Notification);\n    return ref;\n})\n.directive('biqTab', biqTab)\n.directive( 'biqTabItem', biqTabItem )\n.config(function(NotificationProvider) {\n    NotificationProvider.setOptions({\n\tdelay: 2500,\n\tstartTop: 20,\n\tstartRight: 10,\n\tverticalSpacing: 20,\n\thorizontalSpacing: 20,\n\tpositionX: 'left',\n\tpositionY: 'bottom'\n    });\n  });"]}